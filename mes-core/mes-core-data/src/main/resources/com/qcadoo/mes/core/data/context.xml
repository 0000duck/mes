<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/security 
       http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<context:component-scan base-package="com.qcadoo.mes" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="org.postgresql.Driver" />
		<property name="jdbcUrl" value="jdbc:postgresql:mes" />
		<property name="user" value="postgres" />
		<property name="password" value="postgres123" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.qcadoo.mes" />
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
				hibernate.show_sql=true
				hibernate.hbm2ddl.auto=update
      		</value>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven />
	
	<security:global-method-security pre-post-annotations="enabled">
		<security:expression-handler ref="methodSecurityExpressionHandler" />
	</security:global-method-security>

	<security:http use-expressions="true" auto-config="false"
		entry-point-ref="loginUrlAuthenticationEntryPoint">
		<security:intercept-url pattern="/login.html" filters="none" />
		<security:intercept-url pattern="/css/**" filters="none" />
		<security:intercept-url pattern="/js/**" filters="none" />
		<security:intercept-url pattern="/**" access="isAuthenticated()" />

		<security:logout logout-success-url="/login.html?logout=true" />

		<security:session-management invalid-session-url="/login.html?timeout=true">
			<security:concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true" />
		</security:session-management>

		<security:custom-filter ref="mySessionExpirationFilter" before="FIRST" />

		<!--<custom-filter ref="securityContextPersistenceFilter" position="SECURITY_CONTEXT_FILTER"/> -->

		<security:custom-filter ref="customAuthenticationFilter"
			position="FORM_LOGIN_FILTER" />

		<security:access-denied-handler ref="accessDeniedHandler" />

	</security:http>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider user-service-ref="userDetailsService">
			<security:password-encoder ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

	<beans:bean id="userDetailsService"
		class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="usersByUsernameQuery">
			<beans:value>
				SELECT USERNAME, PASSWORD, not deleted as enabled FROM UsersUser WHERE
				USERNAME=?
            </beans:value>
		</beans:property>
		<beans:property name="authoritiesByUsernameQuery">
			<beans:value>SELECT U.username, G.role as authority FROM UsersUser U JOIN
				UsersGroup G ON u.usergroup_id = G.id WHERE U.username=?</beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<beans:constructor-arg value="256" />
	</beans:bean>

	<beans:bean id="methodSecurityExpressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<beans:property name="roleHierarchy" ref="roleHierarchy" />
	</beans:bean>

	<beans:bean id="roleHierarchy"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<beans:property name="hierarchy">
			<beans:value>
				ROLE_ADMIN > ROLE_SUPERVISOR
				ROLE_SUPERVISOR > ROLE_USER
	        </beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean id="loginUrlAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login.html" />
	</beans:bean>

	<beans:bean id="accessDeniedHandler"
		class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
		<beans:property name="errorPage" value="/accessDenied.html" />
	</beans:bean>

	<beans:bean id="mySessionExpirationFilter"
		class="com.qcadoo.mes.core.security.SessionExpirationFilter" />

	<beans:bean id="customAuthenticationFilter"
		class="com.qcadoo.mes.core.security.CustomAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="authenticationFailureHandler"
			ref="failureHandler" />
		<beans:property name="authenticationSuccessHandler"
			ref="successHandler" />
	</beans:bean>

	<beans:bean id="successHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/login.html" />
	</beans:bean>

	<beans:bean id="failureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login.html?login_error=error" />
	</beans:bean>

</beans>