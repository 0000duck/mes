<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">


	<global-method-security pre-post-annotations="enabled">
		<expression-handler ref="methodSecurityExpressionHandler" />
	</global-method-security>

	<http use-expressions="true" auto-config="false"
		entry-point-ref="loginUrlAuthenticationEntryPoint">
		<intercept-url pattern="/login.html" filters="none" />
		<intercept-url pattern="/css/**" filters="none" />
		<intercept-url pattern="/js/**" filters="none" />
		<intercept-url pattern="/**" access="isAuthenticated()" />

		<logout logout-success-url="/login.html?logout=true" />

		<session-management invalid-session-url="/login.html?timeout=true">
			<concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true" />
		</session-management>

		<custom-filter ref="mySessionExpirationFilter" before="FIRST" />

		<!--<custom-filter ref="securityContextPersistenceFilter" position="SECURITY_CONTEXT_FILTER"/> -->

		<custom-filter ref="customAuthenticationFilter"
			position="FORM_LOGIN_FILTER" />

		<access-denied-handler ref="accessDeniedHandler" />

	</http>

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="userDetailsService"
		class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="usersByUsernameQuery">
			<beans:value>
				SELECT USERNAME, PASSWORD, not deleted as enabled FROM Users WHERE
				USERNAME=?
            </beans:value>
		</beans:property>
		<beans:property name="authoritiesByUsernameQuery">
			<beans:value>SELECT U.username, G.role as authority FROM Users U JOIN
				Groups G ON u.usergroup_id = G.id WHERE U.username=?</beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<beans:constructor-arg value="256" />
	</beans:bean>

	<beans:bean id="methodSecurityExpressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<beans:property name="roleHierarchy" ref="roleHierarchy" />
	</beans:bean>

	<beans:bean id="roleHierarchy"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<beans:property name="hierarchy">
			<beans:value>
				ROLE_ADMIN > ROLE_USER
	        </beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean id="loginUrlAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login.html" />
	</beans:bean>

	<beans:bean id="accessDeniedHandler"
		class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
		<beans:property name="errorPage" value="/accessDenied.html" />
	</beans:bean>

	<beans:bean id="mySessionExpirationFilter"
		class="com.qcadoo.mes.plugins.products.session.SessionExpirationFilter" />

	<beans:bean id="customAuthenticationFilter"
		class="com.qcadoo.mes.plugins.products.session.CustomAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="authenticationFailureHandler"
			ref="failureHandler" />
		<beans:property name="authenticationSuccessHandler"
			ref="successHandler" />
	</beans:bean>

	<beans:bean id="successHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/login.html" />
	</beans:bean>

	<beans:bean id="failureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login.html?login_error=error" />
	</beans:bean>

</beans:beans>