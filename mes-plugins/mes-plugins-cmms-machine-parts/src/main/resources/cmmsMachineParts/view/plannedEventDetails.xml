<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.3

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
      name="plannedEventDetails" modelName="plannedEvent" modelPlugin="cmmsMachineParts">

    <component type="window" name="window" reference="window">

        <ribbon>
            <template name="standardFormTemplate"/>


            <group name="status">
                <smallButton name="startEvent" icon="startIcon16.png"
                             state="disabled" action="#{form}.changeState(startEvent);"/>
                <smallButton name="revokeEvent" icon="deleteIcon16.png"
                             state="disabled" action="#{form}.changeState(revokeEvent);"/>
                <smallButton name="planEvent" icon="startIcon16.png"
                             state="disabled" action="#{form}.changeState(planEvent);"/>
                <smallButton name="closeEvent" icon="acceptIcon16.png"
                             state="disabled" action="#{form}.changeState(closeEvent);"/>
            </group>
            <!--
                                    <group name="atachments">
                                        <bigButton name="downloadAtachment" icon="generateIcon24.png"
                                                   state="enabled">
                                            <script>
                                                <![CDATA[
                                                    this.addOnChangeListener({
                                                        onClick: function() {
                                                            #{form}.performEvent('downloadAtachment', []);
                                                        }
                                                    });
                                                ]]>
                                            </script>
                                        </bigButton>
                                    </group>-->

        </ribbon>

        <windowTab name="mainTab">

            <component type="form" name="form" reference="form">
                <script>
                    <![CDATA[
                           this.changeState = function(eventPerformer, ribbonItemName) {
                                var ribbonItem = #{window}.getRibbonItem("status." + ribbonItemName);
                                var newState = ribbonItem.forState;

                                if (window.confirm(ribbonItem.confirmMessage)) {
                                    #{form}.fireEvent(eventPerformer, 'changeState', [newState]);
                                }
                            }

                            this.addOnChangeListener({
                                onSetValue: function(value) {
                                    if (! value || ! value.content) {
                                        return;
                                    }
                                    var state = #{state}.getValue().content.value;
                                    if (!state) {
                                        return;
                                    }
                                    if (! value || ! value.content) {
                                        return;
                                    }

                                    if (! value.content.entityId) {
                                        var startEvent = #{window}.getRibbonItem("status.startEvent");
                                        var planEvent = #{window}.getRibbonItem("status.planEvent");
                                        var revokeEvent = #{window}.getRibbonItem("status.revokeEvent");
                                        var closeEvent = #{window}.getRibbonItem("status.closeEvent");
                                        startEvent.disable();
                                        planEvent.disable();
                                        revokeEvent.disable();
                                        closeEvent.disable();
                                        return;
                                    }
                                    updateRibbon(state);
                                }
                            });

                            function toggleEditable(enabled, message) {
                                var toggleRibbonItems = ["actions.save", "actions.saveBack", "actions.cancel", "actions.delete"];
                                for (var elementKey in toggleRibbonItems) {
                                    var ribbonItemName = toggleRibbonItems[elementKey];
                                    var ribbonItem = #{window}.getRibbonItem(ribbonItemName);

                                    if (!ribbonItem) {
                                        continue;
                                    }

                                    if (enabled) {
                                        ribbonItem.enable();
                                    } else {
                                        if (message) {
                                            ribbonItem.disable(message);
                                        }else{
                                            ribbonItem.disable();
                                        }
                                    }
                                }
                            }


                            function updateRibbon(state) {
                                var startEvent = #{window}.getRibbonItem("status.startEvent");
                                var planEvent = #{window}.getRibbonItem("status.planEvent");
                                var revokeEvent = #{window}.getRibbonItem("status.revokeEvent");
                                var closeEvent = #{window}.getRibbonItem("status.closeEvent");
                                var deleteButton = #{window}.getRibbonItem("actions.delete");

                                startEvent.forState="02inProgress";
                                startEvent.confirmMessage = "#{translate(cmmsMachineParts.maintenanceEventDetails.window.ribbon.status.confirm.inProgress)}";
                                startEvent.setLabel("#{translate(cmmsMachineParts.maintenanceEventDetails.window.ribbon.status.startEvent)}");

                                closeEvent.forState="04closed";
                                closeEvent.confirmMessage = "#{translate(cmmsMachineParts.maintenanceEventDetails.window.ribbon.status.confirm.closed)}";

                                revokeEvent.forState="05revoked";
                                revokeEvent.confirmMessage = "#{translate(cmmsMachineParts.maintenanceEventDetails.window.ribbon.status.confirm.revoked)}";

                                planEvent.forState="06planned";
                                planEvent.confirmMessage = "#{translate(cmmsMachineParts.maintenanceEventDetails.window.ribbon.status.confirm.planned)}";


                                if (state == "01new") {
                                    startEvent.enable();
                                    planEvent.enable();
                                    revokeEvent.enable();
                                    closeEvent.disable();
                                    toggleEditable(true, "");
                                } else if (state == "02inProgress") {

                                    startEvent.enable();
                                    planEvent.enable();
                                    revokeEvent.enable();
                                    closeEvent.disable();

                                    startEvent.forState="03edited";
                                    startEvent.confirmMessage = "#{translate(cmmsMachineParts.maintenanceEventDetails.window.ribbon.status.confirm.edited)}";
                                    startEvent.setLabel("#{translate(cmmsMachineParts.maintenanceEventDetails.window.ribbon.status.stopEvent)}");
                                    toggleEditable(true, "");
                                    deleteButton.disable();

                                } else if (state == "05revoked" || state == "06planned" || state == "04closed") {
                                    startEvent.disable();
                                    planEvent.disable();
                                    revokeEvent.disable();
                                    closeEvent.disable();
                                    toggleEditable(false);
                                    if (state == "05revoked") {
                                        deleteButton.enable();
                                    }
                                } else if ( state == "03edited"){
                                    startEvent.disable();
                                    planEvent.disable();
                                    revokeEvent.disable();
                                    closeEvent.enable();
                                    toggleEditable(true, "");
                                    deleteButton.disable();
                                }
                            }
                             this.addOnChangeListener({
                                    onSetValue: function() {
                                        var json = JSON.parse(context);

                                        var plannedEventContextId = json['window.mainTab.form.gridLayout.plannedEventContext'];
                                        var currentPlannedEventContextId = #{plannedEventContext}.getValue().content.value;

                                        if (plannedEventContextId != null && currentPlannedEventContextId != plannedEventContextId) {
                                           #{form}.fireEvent(this, 'fillFieldValues', ['plannedEventContext', plannedEventContextId]);
                                        }
                                    }
                            });
                        ]]>
                </script>
                <component type="gridLayout" name="gridLayout" columns="3" rows="9" hasBorders="false">
                    <layoutElement column="1" row="1">
                        <component type="hidden" name="plannedEventContext" field="plannedEventContext"
                                   reference="plannedEventContext"/>
                        <component type="input" name="number" field="number" reference="number"/>
                    </layoutElement>
                    <layoutElement column="1" row="2">
                        <component type="select" name="type" field="type" reference="type" defaultEnabled="true">

                            <listener event="onSelectedEntityChange"
                                      class="com.qcadoo.mes.cmmsMachineParts.listeners.PlannedEventDetailsListeners"
                                      method="toggleFieldsVisible"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="1" row="3">
                        <component type="lookup" name="factory" field="factory"
                                   reference="factory">
                            <option type="column" name="name" fields="name"/>
                            <option type="column" name="city" fields="city"/>

                            <option type="searchable" value="name,city,number"/>
                            <option type="orderable" value="name,city,number"/>

                            <option type="expression" value="#number + ' - ' + #name"/>
                            <option type="fieldCode" value="number"/>

                            <listener event="onSelectedEntityChange"
                                      method="factoryChanged"
                                      class="com.qcadoo.mes.cmmsMachineParts.listeners.EventListeners"/>
                            <criteriaModifier
                                    class="com.qcadoo.mes.cmmsMachineParts.criteriaModifiers.EventCriteriaModifiersCMP"
                                    method="selectFactory"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="1" row="4">
                        <component type="lookup" name="division" field="division"
                                   reference="division" source="#{factory}.divisions">
                            <option type="column" name="name" fields="name"/>

                            <option type="searchable" value="name,number"/>
                            <option type="orderable" value="name,number"/>

                            <option type="expression" value="#number + ' - ' + #name"/>
                            <option type="fieldCode" value="number"/>

                            <listener event="onSelectedEntityChange"
                                      method="divisionChanged"
                                      class="com.qcadoo.mes.cmmsMachineParts.listeners.EventListeners"/>
                            <criteriaModifier
                                    class="com.qcadoo.mes.cmmsMachineParts.criteriaModifiers.EventCriteriaModifiersCMP"
                                    method="selectDivision"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="1" row="5">
                        <component type="lookup" name="productionLine" field="productionLine"
                                   reference="productionLine" source="#{division}.productionLines">
                            <option type="column" name="name" fields="name"/>

                            <option type="searchable" value="name,number"/>
                            <option type="orderable" value="name,number"/>

                            <option type="expression" value="#number + ' - ' + #name"/>
                            <option type="fieldCode" value="number"/>

                            <listener event="onSelectedEntityChange"
                                      method="productionLineChanged"
                                      class="com.qcadoo.mes.cmmsMachineParts.listeners.EventListeners"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="1" row="6">
                        <component type="lookup" name="workstation" field="workstation"
                                   reference="workstation" defaultEnabled="false">
                            <option type="column" name="name" fields="name"/>

                            <option type="searchable" value="name,number"/>
                            <option type="orderable" value="name,number"/>

                            <option type="expression" value="#number + ' - ' + #name"/>
                            <option type="fieldCode" value="number"/>

                            <listener event="onSelectedEntityChange"
                                      method="workstationChanged"
                                      class="com.qcadoo.mes.cmmsMachineParts.listeners.EventListeners"/>
                            <criteriaModifier
                                    class="com.qcadoo.mes.cmmsMachineParts.criteriaModifiers.EventCriteriaModifiersCMP"
                                    method="selectWorkstation"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="1" row="7">
                        <component type="lookup" name="subassembly" field="subassembly"
                                   reference="subassembly" source="#{workstation}.subassemblies">
                            <option type="column" name="name" fields="name"/>

                            <option type="searchable" value="name,number"/>
                            <option type="orderable" value="name,number"/>

                            <option type="expression" value="#number + ' - ' + #name"/>
                            <option type="fieldCode" value="number"/>

                            <listener event="onSelectedEntityChange"
                                      method="subassemblyChanged"
                                      class="com.qcadoo.mes.cmmsMachineParts.listeners.EventListeners"/>
                            <criteriaModifier
                                    class="com.qcadoo.mes.cmmsMachineParts.criteriaModifiers.EventCriteriaModifiersCMP"
                                    method="selectSubassembly"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="1" height="3">
                        <component type="textarea" name="description" field="description" reference="description"/>
                    </layoutElement>

                    <layoutElement column="2" row="4">
                        <component type="lookup" name="owner" field="owner"
                                   reference="owner" defaultEnabled="true">
                            <option type="column" name="name" fields="name" link="true"/>

                            <option type="searchable" value="name"/>
                            <option type="orderable" value="name"/>

                            <option type="expression" value="#name + ' ' + #surname"/>
                            <option type="fieldCode" value="surname"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="5">
                        <component type="checkbox" name="plannedSeparately" field="plannedSeparately"
                                   reference="plannedSeparately"/>
                    </layoutElement>
                    <layoutElement column="2" row="6">
                        <component type="checkbox" name="requiresShutdown" field="requiresShutdown"
                                   reference="requiresShutdown"/>
                    </layoutElement>

                    <layoutElement row="1" column="3" height="5">
                        <component type="borderLayout" name="dateBorderLayout" reference="dateBorderLayout">
                            <component type="gridLayout" name="dateGridLayout" reference="dateGridLayout" rows="5"
                                       columns="1" hasBorders="false">
                                <layoutElement row="1" column="1">
                                    <component type="select" name="basedOn" reference="basedOn" field="basedOn">
                                        <listener event="onSelectedEntityChange"
                                                  class="com.qcadoo.mes.cmmsMachineParts.listeners.PlannedEventDetailsListeners"
                                                  method="toggleEnabledFromBasedOn"/>
                                    </component>
                                </layoutElement>

                                <layoutElement row="2" column="1">
                                    <component type="calendar" name="date" reference="date" field="date"/>
                                </layoutElement>

                                <layoutElement row="3" column="1">
                                    <component type="input" name="counter" reference="counter" field="counter"/>
                                </layoutElement>

                                <layoutElement row="4" column="1">
                                    <component type="input" name="counterTolerance" reference="counterTolerance"
                                               field="counterTolerance"/>
                                </layoutElement>

                                <layoutElement row="5" column="1">
                                    <component type="time" name="duration" reference="duration" field="duration">
                                        <option type="noHours" value="4"/>
                                    </component>
                                </layoutElement>
                            </component>
                            <option type="label" value="plannedEventDate"/>
                        </component>
                    </layoutElement>

                    <layoutElement row="6" column="3">
                        <component type="input" name="effectiveCounter" reference="effectiveCounter"
                                   field="effectiveCounter"/>
                    </layoutElement>

                    <layoutElement row="7" column="3">
                        <component type="time" name="effectiveDuration" reference="effectiveDuration"
                                   field="effectiveDuration">
                            <option type="noHours" value="4"/>
                        </component>
                    </layoutElement>

                    <layoutElement column="3" row="8">
                        <component type="lookup" name="company" field="company"
                                   reference="company">
                            <option type="column" name="name" fields="name"/>

                            <option type="searchable" value="name,number"/>
                            <option type="orderable" value="name,number"/>

                            <option type="expression" value="#number + ' - ' + #name"/>
                            <option type="fieldCode" value="number"/>
                        </component>
                    </layoutElement>
                </component>

                <component type="select" name="state" field="state"
                           reference="state" hasLabel="false" defaultVisible="never"/>

                <option type="header" value="true"/>
                <option type="expression"
                        value="#number + ' - ' + '@cmmsMachineParts.plannedEvent.type.value.' + #type + ' - ' + '@cmmsMachineParts.plannedEvent.state.value.' + #state"/>
                <listener event="fillFieldValues"
                          class="com.qcadoo.mes.cmmsMachineParts.listeners.EventListeners"
                          method="fillFieldValues"/>

                <listener event="downloadAtachment" method="downloadAtachment"
                          class="com.qcadoo.mes.cmmsMachineParts.listeners.EventListeners"/>

                <listener event="showSolutions" method="showSolutions"
                          class="com.qcadoo.mes.cmmsMachineParts.listeners.EventListeners"/>

                <listener event="changeState"
                          class="com.qcadoo.mes.cmmsMachineParts.states.MaintenanceEventStateChangeViewClient"
                          method="changeState"/>
            </component>
        </windowTab>

        <windowTab name="datesTab">
            <component type="gridLayout" name="datesGridLayout" columns="2" rows="1">
                <layoutElement column="1" row="1">
                    <component type="borderLayout" name="datesBorderLayout">
                        <component type="gridLayout" name="datesGridLayout" columns="1" rows="3">
                            <layoutElement column="1" row="1">
                                <component type="calendar" name="startDate" field="#{form}.startDate"
                                           reference="startDate">
                                    <option type="withTimePicker" value="true"/>
                                </component>
                            </layoutElement>
                            <layoutElement column="1" row="2">
                                <component type="calendar" name="finishDate" field="#{form}.finishDate"
                                           reference="finishDate">
                                    <option type="withTimePicker" value="true"/>
                                </component>
                            </layoutElement>
                            <layoutElement column="1" row="3">
                                <component type="checkbox" name="isDeadline" field="#{form}.isDeadline"
                                           reference="isDeadline"/>
                            </layoutElement>
                        </component>
                        <option type="label" value="datesBorderLayoutLabel"/>
                    </component>
                </layoutElement>
            </component>
        </windowTab>

        <windowTab name="responsibleWorkersTab">
            <component type="lookup" name="staffLookup" reference="staffLookup"
                       field="#{form}.responsibleWorkers" defaultVisible="false" persistent="false"
                       hasLabel="false">
                <option type="column" name="name" fields="name"/>
                <option type="column" name="surname" fields="surname"/>

                <option type="searchable" value="number,name,surname"/>
                <option type="orderable" value="number,name,surname"/>

                <option type="expression" value="#name + ' ' + #surname"/>
                <option type="fieldCode" value="number"/>

                <option type="multiselect" value="true"/>
            </component>
            <component type="grid" name="responsibleWorkers" reference="responsibleWorkers"
                       source="#{form}.responsibleWorkers">
                <option type="column" name="number" fields="number"/>
                <option type="column" name="name" fields="name"/>
                <option type="column" name="surname" fields="surname"/>

                <option type="order" column="number" direction="asc"/>

                <option type="searchable" value="number,name,surname"/>
                <option type="orderable" value="number,name,surname"/>

                <option type="weakRelation" value="true"/>
                <option type="correspondingLookup" value="staffLookup"/>

                <option type="fullscreen" value="true"/>
                <option type="multiselect" value="true"/>
                <option type="deletable" value="true"/>
                <option type="creatable" value="true"/>

                <option type="fixedHeight" value="true"/>
            </component>
        </windowTab>
        <windowTab name="actionsTab" reference="actionsTab">
            <component type="grid" name="actions" reference="actions"
                       source="#{form}.actions">
                <option type="column" name="name" fields="action" link="true" expression="#action['name']"/>
                <option type="column" name="responsibleWorkerName" fields="responsibleWorkerName" link="true"/>
                <option type="column" name="description" fields="description"/>
                <option type="column" name="state" fields="state"/>
                <option type="column" name="reason" fields="reason"/>

                <option type="order" column="name" direction="asc"/>

                <option type="searchable" value="name,responsibleWorkerName,description,state,reason"/>
                <option type="orderable" value="name,responsibleWorkerName,description,state,reason"/>

                <option type="correspondingView" value="cmmsMachineParts/actionForPlannedEventDetails"/>
                <option type="correspondingComponent" value="form"/>
                <option type="correspondingViewInModal" value="true"/>

                <option type="fullscreen" value="true"/>
                <option type="multiselect" value="true"/>
                <option type="deletable" value="true"/>
                <option type="creatable" value="true"/>

                <option type="fixedHeight" value="true"/>

            </component>
        </windowTab>
    </component>
    <hooks>

        <beforeRender class="com.qcadoo.mes.cmmsMachineParts.hooks.PlannedEventDetailsHooks"
                      method="plannedEventBeforeRender"/>

        <beforeRender class="com.qcadoo.mes.cmmsMachineParts.hooks.PlannedEventDetailsHooks"
                      method="toggleFieldsVisible"/>
    </hooks>
</view>
