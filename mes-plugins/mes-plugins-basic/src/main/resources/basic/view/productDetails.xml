<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.1.6

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view" 
	xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
	name="productDetails"
	modelName="product">
	
	<component type="window" name="window" reference="window">
		<ribbon>
			<template name="standardFormTemplate" />
		</ribbon>
		<windowTab name="mainTab">
			<component type="form" name="product" reference="form">
				<script>
					<![CDATA[
						var save = #{window}.getRibbonItem("actions.save");
						var saveBack = #{window}.getRibbonItem("actions.saveBack");
						var saveNew = #{window}.getRibbonItem("actions.saveNew");
						var cancel = #{window}.getRibbonItem("actions.cancel");
						var del = #{window}.getRibbonItem("actions.delete");
						
						this.addOnChangeListener({
							onSetValue: function(value) {
								if (! value || ! value.content) {
									return;
								}
								save.enable();
								saveBack.enable();
								saveNew.enable();
								
								if (! value.content.entityId) {
									cancel.disable();
									del.disable();
									return;
								}
								
								cancel.enable();
								del.enable();
								
								var externalNumber = #{externalNumber}.getValue().content.value;
								
								if(externalNumber != undefined && externalNumber != '') {
									saveNew.disable("#{translate(basic.product.ribbon.message.productIsExternal)}");
									del.disable("#{translate(basic.product.ribbon.message.productIsExternal)}");
								}
							}
						});
					]]>
				</script>
				<component type="gridLayout" name="gridLayout" columns="3" rows="5">
					<layoutElement column="1" row="1">
						<component type="input" name="number" field="number" reference="number">
							<option type="alignment" value="right" />
						</component>
						<component type="hidden" name="externalNumber" field="externalNumber" reference="externalNumber" />
					</layoutElement>
					<layoutElement column="1" row="2" height="2">
						<component type="textarea" name="name" field="name" hasDescription="true" />
					</layoutElement>				
					<layoutElement column="1" row="4">
						<component type="select" name="globalTypeOfMaterial" field="globalTypeOfMaterial" hasDescription="true"/>
					</layoutElement>
					<layoutElement column="1" row="5">
						<component type="select" name="unit" field="unit" reference="unit" />
					</layoutElement>	
					<layoutElement column="2" row="1">
						<component type="input" name="ean" field="ean" />
					</layoutElement>
					<layoutElement column="2" row="2">
						<component type="select" name="category" field="category" />
					</layoutElement>
					<layoutElement column="2" row="3" height="2">
						<component type="textarea" name="description" field="description" hasDescription="false" />
					</layoutElement>
				</component>
				<option type="header" value="true"/>
				<option type="expression" value="#name" />
			</component>
		</windowTab>
		<windowTab name="auditTab">
			<component type="gridLayout" name="gridLayout" columns="3" rows="4">
				<layoutElement column="1" row="1" height="4">
					<component type="borderLayout" name="auditBorderLayout"
						reference="auditBorderLayout">
						<option type="label" value="auditLayoutLabel" />
						<component type="gridLayout" name="gridLayout" columns="1" rows="4">
							<layoutElement column="1" row="1">
								<component type="input" name="createDate" field="#{form}.createDate" defaultEnabled="false"/>
							</layoutElement>
							<layoutElement column="1" row="2">
								<component type="input" name="createUser" field="#{form}.createUser" defaultEnabled="false"/>
							</layoutElement>
							<layoutElement column="1" row="3">
								<component type="input" name="updateDate" field="#{form}.updateDate" defaultEnabled="false"/>
							</layoutElement>
							<layoutElement column="1" row="4">
								<component type="input" name="updateUser" field="#{form}.updateUser" defaultEnabled="false"/>
							</layoutElement>
						</component>
					</component>
				</layoutElement>
			</component>
		</windowTab>
		<windowTab name="substitutesTab">
			<component type="gridLayout" name="gridsLayout" columns="5" rows="6" hasBorders="false">
				<layoutElement column="1" row="1" width="2" height="6">
					<component type="grid" name="substitutes" reference="substitutes" source="#{form}.substitutes">
						<option type="column" name="number" fields="number" link="true" width="50"/>
						<option type="column" name="name" fields="name" link="true" width="100"/>
						<option type="order" column="priority" direction="asc"/>
						<option type="correspondingView" value="basic/productSubstituteDetails" />
						<option type="correspondingComponent" value="form" />
						<option type="correspondingViewInModal" value="true" />
						<option type="paginable" value="false" />
						<option type="creatable" value="true" />
						<option type="deletable" value="true" />
						<option type="fullscreen" value="true" />
						<option type="multiselect" value="true" />
					</component>
				</layoutElement>
				<layoutElement column="3" row="1" width="3" height="6">
					<component type="grid" name="substituteComponents"
						source="#{substitutes}.components">
						<option type="column" name="number" fields="product"
							expression="#product['number']" link="true" width="50"/>
						<option type="column" name="name" fields="product"
							expression="#product['name']" link="true" width="100"/>
						<option type="column" name="quantity" fields="quantity" width="40"/>
						<option type="column" name="unit" fields="product"
							expression="#product['unit']" link="false" width="30"/>
						<option type="order" column="number" direction="desc"/>
						<option type="correspondingView" value="basic/productSubstituteComponentDetails" />
						<option type="correspondingComponent" value="form" />
						<option type="correspondingViewInModal" value="true" />
						<option type="paginable" value="false" />
						<option type="creatable" value="true" />
						<option type="deletable" value="true" />
						<option type="fullscreen" value="true" />
						<option type="multiselect" value="true" />
					</component>
				</layoutElement>
			</component>
		</windowTab>
		<windowTab name="integrationTab">
			<component type="gridLayout" name="gridLayout" columns="3" rows="1">
				<layoutElement column="1" row="1">
					<component type="input" name="externalNumber" fields="#{form}.externalNumber" defaultEnabled="false"/>
				</layoutElement>
			</component>
		</windowTab>
	</component>
	<hooks>
		<beforeRender class="com.qcadoo.mes.basic.ProductService" method="generateProductNumber" />
		<beforeRender class="com.qcadoo.mes.basic.ProductService" method="disableProductFormForExternalItems" />
	</hooks>
</view>