<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.1.0

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view" 
	xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
	name="companyDetails"
	modelName="company">
	
	<component type="window" name="window" reference="window">
		<ribbon>
			<template name="standardFormTemplate" />
		</ribbon>
		<component type="form" name="company" reference="form">
			<script>
				<![CDATA[
					var saveButton = #{window}.getRibbonItem("actions.save");
					var saveBackButton = #{window}.getRibbonItem("actions.saveBack");
					var saveNewButton = #{window}.getRibbonItem("actions.saveNew");
					var cancelButton = #{window}.getRibbonItem("actions.cancel");
					var deleteButton = #{window}.getRibbonItem("actions.delete");
					var copyButton = #{window}.getRibbonItem("actions.copy");
					var buttons = new Array(saveButton, saveBackButton, saveNewButton, cancelButton, deleteButton, copyButton);

					var listener = {
						onSetValue: function() {
							var owner = #{owner}.getValue().content.value;
							
							if (owner == true) {	
								disableButtons(buttons, "#{translate(basic.company.ribbon.message.companyIsOwner)}");
 							} else {
 								enableButtons(buttons);
 							}
						}
					};
					
					function disableButtons(buttons, message) { 
						for ( var i = 0; i < buttons.length; i++ ) 
						{ 
							buttons[i].disable(message);
						} 
					} 
					
					function enableButtons(buttons) { 
						for ( var i = 0; i < buttons.length; i++ ) 
						{ 
							buttons[i].enable();
						} 
					} 

					#{form}.addOnChangeListener(listener);
				]]>
			</script>
			<component type="gridLayout" name="gridLayout" columns="3" rows="14">
				<layoutElement column="1" row="1">
					<component type="input" name="number" field="number">
						<option type="alignment" value="right" />
					</component>
				</layoutElement>
				<layoutElement column="1" row="2">
					<component type="input" name="companyFullName" field="companyFullName"  />
				</layoutElement>
				<layoutElement column="1" row="3">
					<component type="input" name="tax" field="tax" />
				</layoutElement>
				<layoutElement column="1" row="4">
					<component type="input" name="street" field="street" />
				</layoutElement>
				<layoutElement column="1" row="5">
					<component type="input" name="house" field="house" />
				</layoutElement>
				<layoutElement column="1" row="6">
					<component type="input" name="flat" field="flat" />
				</layoutElement>
				<layoutElement column="1" row="7">
					<component type="input" name="zipCode" field="zipCode" />
				</layoutElement>
				<layoutElement column="1" row="8">
					<component type="input" name="city" field="city" />
				</layoutElement>
				<layoutElement column="1" row="9">
					<component type="input" name="state" field="state" />
				</layoutElement>
				<layoutElement column="1" row="10">
					<component type="input" name="country" field="country" />
				</layoutElement>
				<layoutElement column="1" row="11">
					<component type="input" name="email" field="email" />
				</layoutElement>
				<layoutElement column="1" row="12">
					<component type="input" name="addressWww" field="addressWww" />
				</layoutElement>
				<layoutElement column="1" row="13">
					<component type="input" name="phone" field="phone" />
				</layoutElement>
				<layoutElement column="1" row="14">	
					<component type="hidden" name="owner" field="owner" reference="owner" />
				</layoutElement>
			</component>
			<option type="header" value="true" />
			<option type="expression" value="' '" />
		</component>
	</component>
	<hooks>
		<beforeRender class="com.qcadoo.mes.basic.CompanyService" method="disableCompanyFormForOwner" />
	</hooks>
</view>