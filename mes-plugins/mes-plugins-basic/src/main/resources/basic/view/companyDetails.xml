<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.1.7

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view" 
	xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
	name="companyDetails"
	modelName="company">
	
	<component type="window" name="window" reference="window">
		<ribbon>
			<template name="standardFormTemplate" />
		</ribbon>
		<script>
					<![CDATA[
						var buttonsStandard = ["actions.save", "actions.saveBack", "actions.saveNew", "actions.cancel", "actions.delete", "actions.copy"];
	
						var listener = {
							onSetValue: function() {
								var owner = #{owner}.getValue().content.value;
								
								if (owner == true) {	
									disableButtons(buttonsStandard, "#{translate(basic.company.ribbon.message.companyIsOwner)}");
	 							} else {
	 								enableButtons(buttonsStandard);
	 							}
							}
						};
						
						function disableButtons(buttonNames, message) { 
							for (var buttonName in buttonNames) { 
								if ( message == '') {
									#{window}.getRibbonItem(buttonNames[buttonName]).disable();
								} else {
									#{window}.getRibbonItem(buttonNames[buttonName]).disable(message);
								}
							} 
						} 
						
						function enableButtons(buttonNames, message) { 
							for (var buttonName in buttonNames) { 	
								if ( message == '') {
									#{window}.getRibbonItem(buttonNames[buttonName]).enable();
								} else {
									#{window}.getRibbonItem(buttonNames[buttonName]).enable(message);
								}
							} 
						} 
	
						#{form}.addOnChangeListener(listener);
					]]>
				</script>
		<windowTab name="mainTab">
			<component type="form" name="company" reference="form">
				
				<component type="gridLayout" name="mainTabGridLayout" columns="3" rows="7">
					<layoutElement column="1" row="1">
						<component type="input" name="number" field="number">
							<option type="alignment" value="right" />
						</component>
					</layoutElement>
					<layoutElement column="1" row="2">
						<component type="input" name="name" field="name"  />
					</layoutElement>
					<layoutElement column="1" row="3">
						<component type="input" name="tax" field="tax" />
					</layoutElement>
					<layoutElement column="1" row="4">
						<component type="input" name="phone" field="phone" />
					</layoutElement>
					<layoutElement column="1" row="5">
						<component type="input" name="email" field="email" />
					</layoutElement>
					<layoutElement column="1" row="6">
						<component type="input" name="website" field="website" />
					</layoutElement>
					<layoutElement column="1" row="7">	
						<component type="hidden" name="owner" field="owner" reference="owner" />
					</layoutElement>
					
					<layoutElement column="2" row="1">
						<component type="input" name="street" field="street" />
					</layoutElement>
					<layoutElement column="2" row="2">
						<component type="input" name="house" field="house" />
					</layoutElement>
					<layoutElement column="2" row="3">
						<component type="input" name="flat" field="flat" />
					</layoutElement>
					<layoutElement column="2" row="4">
						<component type="input" name="zipCode" field="zipCode" />
					</layoutElement>
					<layoutElement column="2" row="5">
						<component type="input" name="city" field="city" />
					</layoutElement>
					<layoutElement column="2" row="6">
						<component type="input" name="state" field="state" />
					</layoutElement>
					<layoutElement column="2" row="7">
						<component type="input" name="country" field="country" />
					</layoutElement>
	
				</component>
				<option type="header" value="true" />
				<option type="expression" value="' '" />
			</component>
		</windowTab>
		<windowTab name="sellsTab">

			<component type="gridLayout" name="sellsTabGridLayout"
				columns="2" rows="1">
				<layoutElement column="1" row="1">
					<component type="lookup" name="productsLookup" reference="productsLookup"
						field="#{form}.products" defaultVisible="false" persistent="false"
						hasLabel="false">
						
						<option type="column" name="name" fields="name" link="true"
							width="100" />

						<option type="searchable" value="number,name" />
						<option type="orderable" value="number,name" />

						<option type="expression"
							value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name" />
						<option type="fieldCode" value="number" />

						<option type="multiselect" value="true" />
					</component>
					<component type="grid" name="products" reference="products"
						source="#{form}.products">
						<option type="column" name="number" fields="number" width="50" />
						<option type="column" name="name" fields="name" width="100" />

						<option type="searchable" value="number,name" />
						<option type="orderable" value="number,name" />

						<option type="order" column="number" direction="desc" />

						<option type="fullscreen" value="true" />
						<option type="multiselect" value="true" />
						<option type="creatable" value="true" />
						<option type="deletable" value="true" />

						<option type="weakRelation" value="true" />
						<option type="correspondingLookup" value="productsLookup" />
					</component>
				</layoutElement>
				
			</component>
		</windowTab>
			
	</component>
	
	<hooks>
		<beforeRender class="com.qcadoo.mes.basic.CompanyService" method="disableCompanyFormForOwner" />
	</hooks>
</view>