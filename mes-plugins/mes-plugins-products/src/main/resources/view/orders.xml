<?xml version="1.0" encoding="UTF-8"?>
<!-- *************************************************************************** 
	Copyright (c) 2010 Qcadoo Limited Project: Qcadoo MES Version: 0.2.0 This 
	file is part of Qcadoo. Qcadoo is free software; you can redistribute it 
	and/or modify it under the terms of the GNU Affero General Public License 
	as published by the Free Software Foundation; either version 3 of the License, 
	or (at your option) any later version. This program is distributed in the 
	hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
	warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
	GNU Affero General Public License for more details. You should have received 
	a copy of the GNU Affero General Public License along with this program; 
	if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth 
	Floor, Boston, MA 02110-1301 USA *************************************************************************** -->

<qcd:views plugin="products" xmlns:qcd="http://www.qcadoo.com/view">
	<view name="orders" model="order" menuAccessible="true">
		<component type="window" name="window">
			<ribbon>
				<group template="gridNewCopyAndRemoveAction"/>
				<group name="export">
					<smallButton name="print" icon="pdfIcon16.png"
						action="#{grid}.fireEvent(printOrder,pdf);" />
				</group>
				<group name="exportMaterialReq">
					<smallButton name="pdf" icon="pdfIcon16.png"
						action="#{grid}.fireEvent(printWorkPlanForOrder,pdf);" />
					<smallButton name="xls" icon="xlsIcon16.png"
						action="#{grid}.fireEvent(printWorkPlanForOrder,xls);" />
				</group>
				<group name="exportWorker">
					<smallButton name="pdfWorker" icon="pdfIcon16.png"
						action="#{grid}.fireEvent(printWorkPlanForOrder,pdf,ForWorker);" />
					<smallButton name="xlsWorker" icon="xlsIcon16.png"
						action="#{grid}.fireEvent(printWorkPlanForOrder,xls,ForWorker);" />
				</group>
				<group name="exportMachine">
					<smallButton name="pdfMachine" icon="pdfIcon16.png"
						action="#{grid}.fireEvent(printWorkPlanForOrder,pdf,ForMachine);" />
					<smallButton name="xlsMachine" icon="xlsIcon16.png"
						action="#{grid}.fireEvent(printWorkPlanForOrder,xls,ForMachine);" />
				</group>
				<group name="exportProduct">
					<smallButton name="pdfProduct" icon="pdfIcon16.png"
						action="#{grid}.fireEvent(printWorkPlanForOrder,pdf,ForProduct);" />
					<smallButton name="xlsProduct" icon="xlsIcon16.png"
						action="#{grid}.fireEvent(printWorkPlanForOrder,xls,ForProduct);" />
				</group>
			</ribbon>
			<component type="grid" name="orders" reference="grid">
				<option type="column" name="number" fields="number" link="true" />
				<option type="column" name="name" fields="name" link="true" />
				<option type="column" name="state" fields="state" />
				<option type="column" name="dateFrom" fields="dateFrom" />
				<option type="column" name="dateTo" fields="dateTo" />
				<option type="order" column="number" direction="desc" />
				<option type="correspondingView" value="products/order" />
				<option type="correspondingComponent" value="form" />
				<option type="searchable" value="name,number,state,dateFrom,dateTo" />
				<option type="orderable" value="name,number,state,dateFrom,dateTo" />
				<option type="fullscreen" value="true" />
				<option type="hasPredefinedFilters" value="true" />
				<predefinedFilters>
					<predefinedFilter name="all">
					</predefinedFilter>
					<predefinedFilter name="pending">
						<filterRestriction column="state" value="01pending" />
						<filterOrder column="dateFrom" direction="desc" />
					</predefinedFilter>
					<predefinedFilter name="overduePending">
						<filterRestriction column="state" value="01pending" />
						<filterRestriction column="dateTo" value="&lt;= @{yesterday}" />
					</predefinedFilter>
					<predefinedFilter name="overdueInProgress">
						<filterRestriction column="state" value="02inProgress" />
						<filterRestriction column="dateTo" value="&lt;= @{yesterday}" />
					</predefinedFilter>
					<predefinedFilter name="startingToday">
						<filterRestriction column="state" value="01pending" />
						<filterRestriction column="dateFrom" value="@{today}" />
					</predefinedFilter>
					<predefinedFilter name="startingTomorrow">
						<filterRestriction column="state" value="01pending" />
						<filterRestriction column="dateFrom" value="@{tomorrow}" />
					</predefinedFilter>
				</predefinedFilters>
				<listener event="printOrder" bean="com.qcadoo.mes.products.OrderService" method="printOrder" />
				<listener event="printWorkPlanForOrder" bean="com.qcadoo.mes.products.WorkPlanService" method="printWorkPlanForOrder" />
			</component>
			<option type="fixedHeight" value="true" />
			<option type="header" value="false" />
		</component>
	</view>
	<view name="order" model="order">
		<component type="window" name="window">
			<ribbon>
				<group template="navigation"/>
				<group template="formSaveCopyAndRemoveActions"/>
				<group name="exportMaterialReq">
					<smallButton name="pdf" icon="pdfIcon16.png"
						action="#{form}.fireEvent(printMaterialRequirement,pdf);" />
					<smallButton name="xls" icon="xlsIcon16.png"
						action="#{form}.fireEvent(printMaterialRequirement,xls);" />
				</group>
				<group name="exportWorker">
					<smallButton name="pdfWorker" icon="pdfIcon16.png"
						action="#{form}.fireEvent(printWorkPlan,pdf,ForWorker);" />
					<smallButton name="xlsWorker" icon="xlsIcon16.png"
						action="#{form}.fireEvent(printWorkPlan,xls,ForWorker);" />
				</group>
				<group name="exportMachine">
					<smallButton name="pdfMachine" icon="pdfIcon16.png"
						action="#{form}.fireEvent(printWorkPlan,pdf,ForMachine);" />
					<smallButton name="xlsMachine" icon="xlsIcon16.png"
						action="#{form}.fireEvent(printWorkPlan,xls,ForMachine);" />
				</group>
				<group name="exportProduct">
					<smallButton name="pdfProduct" icon="pdfIcon16.png"
						action="#{form}.fireEvent(printWorkPlan,pdf,ForProduct);" />
					<smallButton name="xlsProduct" icon="xlsIcon16.png"
						action="#{form}.fireEvent(printWorkPlan,xls,ForProduct);" />
				</group>
			</ribbon>
			<component type="form" name="order" reference="form">
				<component type="gridLayout" name="gridLayout" columns="3"
					rows="6">
					<layoutElement column="1" row="1">
						<component type="input" name="number" reference="number"
							field="number" />
					</layoutElement>
					<layoutElement column="1" row="2" height="2">
						<component type="textarea" name="name" field="name" />
					</layoutElement>
					<layoutElement column="1" row="4">
						<component type="calendar" name="dateFrom" field="dateFrom" />
					</layoutElement>
					<layoutElement column="1" row="5">
						<component type="calendar" name="dateTo" field="dateTo" />
					</layoutElement>
					<layoutElement column="1" row="6">
						<component type="select" name="state" field="state" />
					</layoutElement>
					<layoutElement column="2" row="1">
						<component type="lookup" name="product" reference="product"
							field="product">
							<option type="column" name="name" fields="name" link="true"
								width="300" />
							<option type="column" name="category" fields="category" />
							<option type="searchable" value="name,category" />
							<option type="orderable" value="name,category" />
							<option type="expression" value="#name + ' - ' + #number" />
							<option type="fieldCode" value="number" />
							<listener event="onSelectedEntityChange" bean="com.qcadoo.mes.products.OrderService" method="changeOrderProduct"/>
						</component>
					</layoutElement>
					<layoutElement column="2" row="2">
						<component type="input" name="defaultTechnology"
							reference="defaultTechnology" field="defaultTechnology"
							defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="2" row="3">
						<component type="lookup" name="technology" reference="technology"
							field="technology" source="#{product}.technologies">
							<option type="column" name="name" fields="name" link="true"
								width="300" />
							<option type="searchable" value="name,number" />
							<option type="orderable" value="name,number" />
							<option type="expression" value="#name + ' - ' + #number" />
							<option type="fieldCode" value="number" />
						</component>
					</layoutElement>
					<layoutElement column="2" row="4">
						<component type="input" name="plannedQuantity"
							reference="plannedQuantity" field="plannedQuantity" />
					</layoutElement>
					<layoutElement column="2" row="5">
						<component type="input" name="doneQuantity" field="doneQuantity" />
					</layoutElement>
					<layoutElement column="3" row="1">
						<component type="calendar" name="effectiveDateFrom"
							field="effectiveDateFrom" defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="3" row="2">
						<component type="calendar" name="effectiveDateTo" field="effectiveDateTo"
							defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="3" row="3">
						<component type="input" name="startWorker" field="startWorker"
							defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="3" row="4">
						<component type="input" name="endWorker" field="endWorker"
							defaultEnabled="false" />
					</layoutElement>
				</component>
				<option type="header" value="false" />
				<option type="expression" value="#name + ' - ' + #number" />
			</component>
		</component>
		<preRenderHook bean="com.qcadoo.mes.products.OrderService" method="generateOrderNumber" />		
		<preRenderHook bean="com.qcadoo.mes.products.OrderService" method="fillDefaultTechnology" />		
		<preRenderHook bean="com.qcadoo.mes.products.OrderService" method="disableTechnologiesIfProductDoesNotAny" />		
		<preRenderHook bean="com.qcadoo.mes.products.OrderService" method="disableFormForDoneOrder" />	
	</view>
</qcd:views>