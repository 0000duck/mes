<?xml version="1.0" encoding="UTF-8"?>
<!-- *************************************************************************** 
	Copyright (c) 2010 Qcadoo Limited Project: Qcadoo MES Version: 0.3.0 This 
	file is part of Qcadoo. Qcadoo is free software; you can redistribute it 
	and/or modify it under the terms of the GNU Affero General Public License 
	as published by the Free Software Foundation; either version 3 of the License, 
	or (at your option) any later version. This program is distributed in the 
	hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
	warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
	GNU Affero General Public License for more details. You should have received 
	a copy of the GNU Affero General Public License along with this program; 
	if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth 
	Floor, Boston, MA 02110-1301 USA *************************************************************************** -->

<qcd:views plugin="products" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://schema.qcadoo.org/view" xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd">
	<view name="materialRequirements" model="materialRequirement"
		menuAccessible="true">
		<component type="window" name="window" reference="window">
			<ribbon>
				<group template="gridNewCopyAndRemoveAction" />
				<group name="export">
					<smallButton name="pdf" icon="pdfIcon16.png"
						action="#{grid}.fireEvent(printMaterialRequirement,pdf);" state="disabled"
						message="noRecordSelected" />
					<smallButton name="xls" icon="xlsIcon16.png"
						action="#{grid}.fireEvent(printMaterialRequirement,xls);" state="disabled"
						message="noRecordSelected" />
				</group>
			</ribbon>
			<component type="grid" name="materialRequirements"
				reference="grid">
				<option type="column" name="name" fields="name" link="true"
					width="300" />
				<option type="column" name="generated" fields="generated"
					link="false" />
				<option type="column" name="worker" fields="worker" width="200" />
				<option type="order" column="name" direction="asc" />
				<option type="searchable" value="name,generated,worker" />
				<option type="orderable" value="name,generated,worker" />
				<option type="correspondingView" value="products/materialRequirement" />
				<option type="correspondingComponent" value="form" />
				<option type="fullscreen" value="true" />
				<option type="multiselect" value="true" />
				<listener event="printMaterialRequirement"
					bean="com.qcadoo.mes.products.MaterialRequirementService" method="printMaterialRequirement" />
				<script>
					<![CDATA[
						var xlsRibbonItem = #{window}.getRibbonItem("export.xls");
						var pdfRibbonItem = #{window}.getRibbonItem("export.pdf");
						
						var listener = {
							onChange: function(selectedEntitiesArray) {
								if (!selectedEntitiesArray || selectedEntitiesArray.length == 0) {
									xlsRibbonItem.disable();
									pdfRibbonItem.disable();
								} else if (selectedEntitiesArray.length > 1) {
									xlsRibbonItem.disable("#{translate(moreThanOneRecordSelected)}");
									pdfRibbonItem.disable("#{translate(moreThanOneRecordSelected)}");	
								} else if (selectedEntitiesArray[0].fields.generated == '0') {
									xlsRibbonItem.disable("#{translate(products.ribbon.message.recordNotGenerated)}");
									pdfRibbonItem.disable("#{translate(products.ribbon.message.recordNotGenerated)}");								
								} else {
									xlsRibbonItem.enable();
									pdfRibbonItem.enable();
								}
							}
						}
						this.addOnChangeListener(listener);
					]]>
				</script>
			</component>
			<option type="fixedHeight" value="true" />
			<option type="header" value="false" />
		</component>
		<preRenderHook bean="com.qcadoo.mes.products.MaterialRequirementService"
			method="setGridGenerateButtonState" />
	</view>
	<view name="materialRequirement" model="materialRequirement">
		<component type="window" name="window" reference="window">
			<ribbon>
				<group template="navigation" />
				<group template="formSaveCopyAndRemoveActions" />
				<group name="generate">
					<!--<bigButton name="save" icon="saveIcon24.png" action="#{form}.performSave;" 
						state="disabled" /> -->
					<!--<bigButton name="copy" icon="copyIcon24.png" action="#{form}.performCopy;" 
						state="disabled"/> -->
					<bigButton name="generate" icon="generateIcon24.png"
						action="#{form}.fireEvent(generateMaterialRequirement);" state="disabled" />
				</group>
				<group name="export">
					<smallButton name="pdf" icon="pdfIcon16.png"
						action="#{form}.fireEvent(printMaterialRequirement,pdf);" state="disabled" />
					<smallButton name="xls" icon="xlsIcon16.png"
						action="#{form}.fireEvent(printMaterialRequirement,xls);" state="disabled" />
				</group>
			</ribbon>
			<component type="form" name="materialRequirement"
				reference="form">
				<script>
					<![CDATA[
						var copyRibbonItem = #{window}.getRibbonItem("actions.copy");
						var xlsRibbonItem = #{window}.getRibbonItem("export.xls");
						var pdfRibbonItem = #{window}.getRibbonItem("export.pdf");
						var saveRibbonItem = #{window}.getRibbonItem("actions.save");
						
						var containsAtLeastOneOrder = false;
						var entityExists = false;
						
						this.addOnChangeListener({
							onSetValue: function(value) {
								if (!value || !value.content) {
									return;
								}
								if (value.content.entityId) {
									entityExists = true;
								} else {
									entityExists = false;
								}
								updateRibbon();
							}
						});
						#{materialRequirementComponents}.addOnChangeListener({
							onSetValue: function(value) {
								if (value.content.totalEntities > 0) {
									containsAtLeastOneOrder = true;
								} else {
									containsAtLeastOneOrder = false;
								}
								updateRibbon();
							}
						});
						
						function updateRibbon() {
							if (entityExists) {
								var isGeneratedCheckboxValue = #{generated}.getValue();
								copyRibbonItem.enable();
								if (isGeneratedCheckboxValue && isGeneratedCheckboxValue.content.value == "1") {
									xlsRibbonItem.enable();
									pdfRibbonItem.enable();
									saveRibbonItem.disable("#{translate(products.ribbon.message.recordAlreadyGenerated)}");
								} else {
									xlsRibbonItem.disable("#{translate(products.ribbon.message.recordNotGenerated)}");
									pdfRibbonItem.disable("#{translate(products.ribbon.message.recordNotGenerated)}");
									saveRibbonItem.enable();
								}
							} else {
								copyRibbonItem.disable("#{translate(recordNotCreated)}");
								xlsRibbonItem.disable("#{translate(recordNotCreated)}");
								pdfRibbonItem.disable("#{translate(recordNotCreated)}");
								saveRibbonItem.enable();
							}
						}
					]]>
				</script>
				<component type="gridLayout" name="gridLayout" columns="3"
					rows="6">
					<layoutElement column="1" row="1">
						<component type="checkbox" name="generated" reference="generated"
							field="generated" defaultEnabled="false">
							<option type="textRepresentationOnDisabled" value="false" />
						</component>
					</layoutElement>
					<layoutElement column="1" row="2">
						<component type="input" name="date" reference="date"
							field="date" defaultEnabled="false">
							<option type="textRepresentationOnDisabled" value="false" />
						</component>
					</layoutElement>
					<layoutElement column="1" row="3">
						<component type="input" name="worker" reference="worker"
							field="worker" defaultEnabled="false">
							<option type="textRepresentationOnDisabled" value="false" />
						</component>
					</layoutElement>
					<layoutElement column="1" row="4" height="2">
						<component type="textarea" name="name" reference="name"
							field="name" />
					</layoutElement>
					<layoutElement column="1" row="6">
						<component type="checkbox" name="onlyComponents"
							reference="onlyComponents" field="onlyComponents">
							<option type="labelWidth" value="55" />
						</component>
					</layoutElement>
					<layoutElement column="2" row="1" width="2" height="6">
						<component type="grid" name="materialRequirementComponents"
							reference="materialRequirementComponents" source="#{form}.orders">
							<option type="column" name="number" fields="order"
								expression="#order['number']" width="50" />
							<option type="column" name="name" fields="order"
								expression="#order['name']" />
							<option type="order" column="number" direction="desc" />
							<option type="correspondingView" value="products/materialRequirementComponent" />
							<option type="correspondingComponent" value="form" />
							<option type="correspondingViewInModal" value="true" />
							<option type="paginable" value="false" />
							<option type="multiselect" value="true" />
							<option type="creatable" value="true" />
							<option type="deletable" value="true" />
							<option type="height" value="200" />
							<option type="width" value="350" />
						</component>
					</layoutElement>
				</component>
				<option type="header" value="true" />
				<option type="expression" value="#name" />
				<listener event="printMaterialRequirement"
					bean="com.qcadoo.mes.products.MaterialRequirementService" method="printMaterialRequirement" />
				<listener event="generateMaterialRequirement"
					bean="com.qcadoo.mes.products.MaterialRequirementService" method="generateMaterialRequirement" />
			</component>
		</component>
		<preRenderHook bean="com.qcadoo.mes.products.MaterialRequirementService"
			method="disableFormForExistingMaterialRequirement" />
		<preRenderHook bean="com.qcadoo.mes.products.MaterialRequirementService"
			method="setGenerateButtonState" />
	</view>
	<view name="materialRequirementComponent" model="materialRequirementComponent">
		<component type="window" name="window">
			<ribbon>
				<group template="navigation" />
				<group template="formSaveAction" />
			</ribbon>
			<component type="form" name="materialRequirementComponent"
				reference="form">
				<component type="gridLayout" name="gridLayout" columns="1"
					rows="1">
					<layoutElement column="1" row="1">
						<component type="lookup" name="order" field="order">
							<option type="column" name="name" fields="name" link="true"
								width="200" />
							<option type="column" name="dateFrom" fields="dateFrom"
								link="false" width="100" />
							<option type="searchable" value="number,name" />
							<option type="orderable" value="number,name" />
							<option type="expression"
								value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name" />
							<option type="fieldCode" value="number" />
						</component>
					</layoutElement>
				</component>
				<option type="header" value="true" />
				<option type="expression" value="#name" />
			</component>
		</component>
	</view>
</qcd:views>