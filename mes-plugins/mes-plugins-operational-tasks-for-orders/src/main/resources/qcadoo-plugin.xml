<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.2.0-SNAPSHOT

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<plugin plugin="operationalTasksForOrders" version="${qcadoo.plugin.version}"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/plugin"
	xmlns:model="http://schema.qcadoo.org/modules/model" xmlns:view="http://schema.qcadoo.org/modules/view"
	xmlns:menu="http://schema.qcadoo.org/modules/menu" xmlns:localization="http://schema.qcadoo.org/modules/localization"
	xmlns:report="http://schema.qcadoo.org/modules/report"
	xsi:schemaLocation="
       http://schema.qcadoo.org/plugin
       http://schema.qcadoo.org/plugin.xsd
       http://schema.qcadoo.org/modules/model
       http://schema.qcadoo.org/modules/model.xsd
       http://schema.qcadoo.org/modules/view
       http://schema.qcadoo.org/modules/view.xsd
       http://schema.qcadoo.org/modules/localization
       http://schema.qcadoo.org/modules/localization.xsd
       http://schema.qcadoo.org/modules/report
       http://schema.qcadoo.org/modules/report.xsd
       http://schema.qcadoo.org/modules/menu
       http://schema.qcadoo.org/modules/menu.xsd">

	<information>
		<name>MES - Operational tasks for orders</name>
		<vendor>
			<name>Qcadoo Limited</name>
			<url>http://www.qcadoo.com/</url>
		</vendor>
	</information>

	<dependencies>
		<dependency>
			<plugin>operationalTasks</plugin>
			<version>[1.1.7</version>
		</dependency>
		<dependency>
			<plugin>productionScheduling</plugin>
			<version>[1.1.7</version>
		</dependency>
	</dependencies>

	<modules>
		<localization:translation path="locales" />

		<model:model-field model="operationalTask" plugin="operationalTasks">
			<model:belongsTo name="order" model="order" plugin="orders" />
		</model:model-field>
		<model:model-field model="operationalTask" plugin="operationalTasks">
			<model:belongsTo name="technologyInstanceOperationComponent"
				model="technologyInstanceOperationComponent" plugin="technologies" />
		</model:model-field>
		<model:model-enum-value model="operationalTask"
			plugin="operationalTasks" value="02executionOperationInOrder" enum="typeTask" />
		<model:model-field model="order" plugin="orders">
			<model:hasMany name="operationalTasks" joinField="order"
				model="operationalTask" cascade="delete" plugin="operationalTasks" />
		</model:model-field>
		<model:model-field model="technologyInstanceOperationComponent"
			plugin="technologies">
			<model:hasMany name="operationalTasks"
				joinField="technologyInstanceOperationComponent" model="operationalTask"
				cascade="delete" plugin="operationalTasks" />
		</model:model-field>

		<model:model-hook model="operationalTask" plugin="operationalTasks">
			<model:onSave
				class="com.qcadoo.mes.operationalTasksForOrders.hooks.OperationalTaskHooksOTFO"
				method="checkIfOrderHasTechnology" />
		</model:model-hook>
		<model:model-hook model="operation" plugin="technologies">
			<model:onSave
				class="com.qcadoo.mes.operationalTasksForOrders.hooks.OperationHooksOTFO"
				method="changedNameOperationTasksWhenEntityNameChanged" />
		</model:model-hook>
		<model:model-hook model="technologyInstanceOperationComponent"
			plugin="technologies">
			<model:onSave
				class="com.qcadoo.mes.operationalTasksForOrders.hooks.TechInstOperCompHooksOTFO"
				method="changedDescriptionOperationTasksWhenCommentEntityChanged" />
		</model:model-hook>
		<model:model-hook model="order" plugin="orders">
			<model:onSave
				class="com.qcadoo.mes.operationalTasksForOrders.hooks.OrderHooksOTFO"
				method="changedProductionLine" />
		</model:model-hook>

		<view:view-tab resource="view/tabExtensions/operationalTaskDetails.xml" />

		<view:view-ribbon-group
			resource="view/ribbonExtensions/operationalTaskDetails.xml" />
		<view:view-ribbon-group
			resource="view/ribbonExtensions/operationDurationDetailsInOrder.xml" />

		<view:view-grid-column plugin="operationalTasks"
			view="operationalTasksList" component="grid">
			<view:column name="orderNumber" fields="order" orderable="true"
				searchable="true" expression="#order['number']" />
			<view:column name="technology" fields="order" orderable="true"
				expression="#order['technology'].get('number')" />
			<view:column name="techInstOperCompNodeNumber" fields="technologyInstanceOperationComponent"
				orderable="true" searchable="true"
				expression="#technologyInstanceOperationComponent['nodeNumber']" />
			<view:column name="techInstOperCompNumber" fields="technologyInstanceOperationComponent"
				orderable="true" 
				expression="#technologyInstanceOperationComponent['operation'].get('number')" />
		</view:view-grid-column>

		<view:view-hook view="operationalTasksList" type="beforeRender"
			plugin="operationalTasks"
			class="com.qcadoo.mes.operationalTasksForOrders.hooks.OperationalTasksListOTFOHooks"
			method="addDiscriminatorRestrictionToGrid" />
			
		<view:view-hook view="operationalTaskDetails" type="beforeRender"
			plugin="operationalTasks"
			class="com.qcadoo.mes.operationalTasksForOrders.hooks.OperationalTasksDetailsHooksOTFO"
			method="disabledFieldWhenOrderTypeIsSelected" />
			
		<view:view-hook view="operationDurationDetailsInOrder" type="beforeRender"
			plugin="productionScheduling"
			class="com.qcadoo.mes.operationalTasksForOrders.hooks.OperationDurationDetailsInOrderDetailsHooksOTFO"
			method="disabledCreateButton" />

		<view:view-listener view="operationalTaskDetails"
			component="typeTask" plugin="operationalTasks" event="onSelectedEntityChange"
			class="com.qcadoo.mes.operationalTasksForOrders.listeners.OperationalTasksDetailsListenersOTFO"
			method="disabledFieldWhenOrderTypeIsSelected" />

		<view:view-listener view="operationalTaskDetails"
			component="form" plugin="operationalTasks" event="showOrder"
			class="com.qcadoo.mes.operationalTasksForOrders.listeners.OperationalTasksDetailsListenersOTFO"
			method="showOrder" />

		<view:view-listener view="operationalTaskDetails"
			component="form" plugin="operationalTasks" event="showOperationParameter"
			class="com.qcadoo.mes.operationalTasksForOrders.listeners.OperationalTasksDetailsListenersOTFO"
			method="showOperationParameter" />

		<view:view-listener view="operationalTaskDetails"
			component="form" plugin="operationalTasks" event="showOperationalTasksWithOrder"
			class="com.qcadoo.mes.operationalTasksForOrders.listeners.OperationalTasksDetailsListenersOTFO"
			method="showOperationalTasksWithOrder" />
			
		<view:view-listener view="operationDurationDetailsInOrder"
			component="form" plugin="productionScheduling" event="createOperationalTasks"
			class="com.qcadoo.mes.operationalTasksForOrders.listeners.OperationDurationDetailsInOrderDetailsListenersOTFO"
			method="createOperationalTasks" />
			
		<view:view-listener view="operationalTasksList"
			component="productIn" plugin="operationalTasks" event="onSelectedEntityChange"
			class="com.qcadoo.mes.operationalTasksForOrders.hooks.OperationalTasksListOTFOHooks"
			method="addDiscriminatorRestrictionToGrid" />
			
		<view:view-listener view="operationalTasksList"
			component="productOut" plugin="operationalTasks" event="onSelectedEntityChange"
			class="com.qcadoo.mes.operationalTasksForOrders.hooks.OperationalTasksListOTFOHooks"
			method="addDiscriminatorRestrictionToGrid" />

	</modules>

</plugin>