<?xml version="1.0" encoding="UTF-8"?>
<!-- *************************************************************************** 
	Copyright (c) 2010 Qcadoo Limited Project: Qcadoo MES Version: 1.2.0 This 
	file is part of Qcadoo. Qcadoo is free software; you can redistribute it 
	and/or modify it under the terms of the GNU Affero General Public License 
	as published by the Free Software Foundation; either version 3 of the License, 
	or (at your option) any later version. This program is distributed in the 
	hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
	warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
	GNU Affero General Public License for more details. You should have received 
	a copy of the GNU Affero General Public License along with this program; 
	if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth 
	Floor, Boston, MA 02110-1301 USA *************************************************************************** -->
<plugin plugin="productionCounting" group="tracking"
	version="${qcadoo.plugin.version}" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://schema.qcadoo.org/plugin" xmlns:model="http://schema.qcadoo.org/modules/model"
	xmlns:view="http://schema.qcadoo.org/modules/view" xmlns:menu="http://schema.qcadoo.org/modules/menu"
	xmlns:localization="http://schema.qcadoo.org/modules/localization"
	xmlns:custom="http://schema.qcadoo.org/modules/custom"
	xsi:schemaLocation="
		http://schema.qcadoo.org/plugin 
		http://schema.qcadoo.org/plugin.xsd 
		http://schema.qcadoo.org/modules/model 
		http://schema.qcadoo.org/modules/model.xsd 
		http://schema.qcadoo.org/modules/view 
		http://schema.qcadoo.org/modules/view.xsd 
		http://schema.qcadoo.org/modules/localization 
		http://schema.qcadoo.org/modules/localization.xsd 
		http://schema.qcadoo.org/modules/menu 
		http://schema.qcadoo.org/modules/menu.xsd 
		http://schema.qcadoo.org/modules/custom 
		http://schema.qcadoo.org/modules/custom.xsd">

	<information>
		<name>MES - Production Counting and Balance</name>
		<vendor>
			<name>Qcadoo Limited</name>
			<url>http://www.qcadoo.com/</url>
		</vendor>
		<description>Use production records to track how much products did you really produce/use and how much work did you put into them. Sum them all up and analyse in the production balance report.</description>
		<license>AGPL</license>
	</information>

	<dependencies>
		<dependency>
			<plugin>operationTimeCalculations</plugin>
			<version>[0.4.1</version>
		</dependency>
		<dependency>
			<plugin>orders</plugin>
			<version>[0.4.1</version>
		</dependency>
		<dependency>
			<plugin>basicProductionCounting</plugin>
			<version>[0.4.0</version>
		</dependency>
		<dependency>
			<plugin>states</plugin>
			<version>[1.1.7</version>
		</dependency>
	</dependencies>

	<modules>
		<localization:translation path="locales" />

		<model:model model="productionRecord" resource="model/productionRecord.xml" />
		<model:model model="productionRecordStateChange" resource="model/productionRecordStateChange.xml" />
		<model:model model="productionBalance" resource="model/productionBalance.xml" />
		<model:model model="productionCounting" resource="model/productionCounting.xml" />
		<model:model model="recordOperationProductInComponent"
			resource="model/recordOperationProductInComponent.xml" />
		<model:model model="recordOperationProductOutComponent"
			resource="model/recordOperationProductOutComponent.xml" />
		<model:model model="balanceOperationProductInComponent"
			resource="model/balanceOperationProductInComponent.xml" />
		<model:model model="balanceOperationProductOutComponent"
			resource="model/balanceOperationProductOutComponent.xml" />
		<model:model model="operationTimeComponent" resource="model/operationTimeComponent.xml" />
		<model:model model="operationPieceworkComponent" resource="model/operationPieceworkComponent.xml" />

		<menu:menu-item name="productionCounting" category="ordersTracking"
			view="productionRecordsList" />
		<menu:menu-item name="productionBalance" category="ordersTracking"
			view="productionBalancesList" />
		<menu:menu-item name="productionCountingsList"
			category="ordersTracking" view="productionCountingsList" />

		<view:view resource="view/productionRecordsList.xml" />
		<view:view resource="view/productionRecordDetails.xml" />
		<view:view resource="view/productionBalancesList.xml" />
		<view:view resource="view/productionBalanceDetails.xml" />
		<view:view resource="view/productionCountingsList.xml" />
		<view:view resource="view/productionCountingDetails.xml" />
		<view:view resource="view/recordOperationProductInComponentDetails.xml" />
		<view:view resource="view/recordOperationProductOutComponentDetails.xml" />

		<model:model-field plugin="states" model="message">
			<model:belongsTo name="productionRecordStateChange"
				plugin="productionCounting" model="productionRecordStateChange" />
		</model:model-field>
		<model:model-field model="parameter" plugin="basic">
			<model:enum name="typeOfProductionRecording" values="01basic,02cumulated,03forEach"
				default="02cumulated" />
		</model:model-field>
		<model:model-field model="parameter" plugin="basic">
			<model:boolean name="registerProductionTime" />
		</model:model-field>
		<model:model-field model="parameter" plugin="basic">
			<model:boolean name="registerPiecework" />
		</model:model-field>
		<model:model-field model="parameter" plugin="basic">
			<model:boolean name="registerQuantityInProduct" />
		</model:model-field>
		<model:model-field model="parameter" plugin="basic">
			<model:boolean name="registerQuantityOutProduct" />
		</model:model-field>
		<model:model-field model="parameter" plugin="basic">
			<model:boolean name="justOne" />
		</model:model-field>
		<model:model-field model="parameter" plugin="basic">
			<model:boolean name="allowToClose" />
		</model:model-field>
		<model:model-field model="parameter" plugin="basic">
			<model:boolean name="autoCloseOrder" />
		</model:model-field>
		<model:model-field model="order" plugin="orders">
			<model:enum name="typeOfProductionRecording" values="01basic,02cumulated,03forEach" />
		</model:model-field>
		<model:model-field model="order" plugin="orders">
			<model:boolean name="registerProductionTime" />
		</model:model-field>
		<model:model-field model="order" plugin="orders">
			<model:boolean name="registerPiecework" />
		</model:model-field>
		<model:model-field model="order" plugin="orders">
			<model:boolean name="registerQuantityInProduct" />
		</model:model-field>
		<model:model-field model="order" plugin="orders">
			<model:boolean name="registerQuantityOutProduct" />
		</model:model-field>
		<model:model-field model="order" plugin="orders">
			<model:boolean name="justOne" />
		</model:model-field>
		<model:model-field model="order" plugin="orders">
			<model:boolean name="allowToClose" />
		</model:model-field>
		<model:model-field model="order" plugin="orders">
			<model:boolean name="autoCloseOrder" />
		</model:model-field>
		<model:model-field model="order" plugin="orders">
			<model:hasMany name="productionRecords" model="productionRecord"
				joinField="order" plugin="productionCounting" cascade="delete" />
		</model:model-field>
		<model:model-field model="order" plugin="orders">
			<model:hasMany name="productionBalances" model="productionBalance"
				joinField="order" plugin="productionCounting" cascade="delete" />
		</model:model-field>
		<model:model-field model="order" plugin="orders">
			<model:hasMany name="productionCountings" model="productionCounting"
				joinField="order" plugin="productionCounting" cascade="delete" />
		</model:model-field>
		<model:model-field model="staff" plugin="basic">
			<model:hasMany name="productionRecords" model="productionRecord"
				joinField="staff" plugin="productionCounting" />
		</model:model-field>
		<model:model-field model="workstationType" plugin="basic">
			<model:hasMany name="productionRecords" model="productionRecord"
				joinField="workstationType" plugin="productionCounting" />
		</model:model-field>
		<model:model-field model="division" plugin="basic">
			<model:hasMany name="productionRecords" model="productionRecord"
				joinField="division" plugin="productionCounting" />
		</model:model-field>

		<model:model-hook model="parameter" plugin="basic">
			<model:onCreate
				class="com.qcadoo.mes.productionCounting.hooks.ParameterHooksPC"
				method="setParameterWithDefaultProductionCountingValues" />
		</model:model-hook>
		<model:model-hook model="order" plugin="orders">
			<model:onCreate class="com.qcadoo.mes.productionCounting.hooks.OrderHookPC"
				method="setOrderWithDefaultProductionCountingValues" />
		</model:model-hook>
		<model:model-hook model="order" plugin="orders">
			<model:validatesWith
				class="com.qcadoo.mes.productionCounting.validators.OrderValidatorsPC"
				method="checkAutoCloseFlagForSynchornizedOrder" />
		</model:model-hook>

		<view:view-tab resource="view/tabExtensions/parameters.xml" />
		<view:view-tab resource="view/tabExtensions/orderDetails.xml" />
		<view:resource uri="public/**/*" />

		<view:view-hook plugin="basic" view="parameters" type="beforeRender"
			class="com.qcadoo.mes.productionCounting.hooks.ParametersHooksPC"
			method="checkIfTypeIsCumulatedAndRegisterPieceworkIsFalse" />
		<view:view-hook plugin="orders" view="orderDetails"
			type="beforeRender"
			class="com.qcadoo.mes.productionCounting.internal.ProductionRecordViewService"
			method="setOrderDefaultValue" />
		<view:view-hook plugin="orders" view="orderDetails"
			type="beforeRender"
			class="com.qcadoo.mes.productionCounting.internal.ProductionRecordViewService"
			method="checkTypeOfProductionRecording" />
		<view:view-hook plugin="orders" view="orderDetails"
			type="beforeRender"
			class="com.qcadoo.mes.productionCounting.internal.ProductionRecordViewService"
			method="changeProducedQuantityFieldState" />

		<custom:custom
			class="com.qcadoo.mes.productionCounting.states.module.ProductionRecordStateServiceRegisterModule" />
	</modules>

	<features>
		<end-user />
	</features>

</plugin>