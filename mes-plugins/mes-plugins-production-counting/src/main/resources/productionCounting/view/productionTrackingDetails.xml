<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.2.0

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<<<<<<< HEAD:mes-plugins/mes-plugins-production-counting/src/main/resources/productionCounting/view/productionTrackingDetails.xml
<view name="productionTrackingDetails" modelName="productionTracking"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
	xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd">

	<component type="window" name="window" reference="window">

		<ribbon>
			<template name="standardFormTemplate" />

			<group name="status">
				<smallButton name="acceptTracking" icon="startIcon16.png"
					state="disabled" action="#{form}.changeTrackingState(acceptTracking)" />
				<smallButton name="cancelTracking" icon="deleteIcon16.png"
					state="disabled" action="#{form}.changeTrackingState(cancelTracking)" />
			</group>
			<group name="productsQuantities">
				<bigButton name="copyPlannedQuantityToUsedQuantity" icon="copyIcon24.png"
					state="disabled" action="#{form}.fireEvent(copyPlannedQuantityToUsedQuantity);" />
			</group>
		</ribbon>

		<windowTab name="mainTab">
			<component type="form" name="productionTrackingDetails"
				reference="form">

				<script>
					<![CDATA[
						this.changeTrackingState = function(eventPerformer, ribbonItemName) {
=======
<view name="productionRecordDetails" modelName="productionRecord"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd">
    <component type="window" name="window" reference="window">
        <ribbon>
            <template name="standardFormTemplate"/>
            <group name="status">
                <smallButton name="acceptRecord" icon="startIcon16.png" state="disabled"
                             action="#{form}.changeRecordState(acceptRecord)"/>
                <smallButton name="cancelRecord" icon="deleteIcon16.png"
                             state="disabled" action="#{form}.changeRecordState(cancelRecord)"/>
            </group>
            <group name="copy">
                <bigButton name="copyPlannedQuantityToUsedQuantity" icon="copyIcon24.png"
                           action="#{form}.fireEvent(copyPlannedQuantityToUsedQuantity);"/>
            </group>
        </ribbon>
        <windowTab name="mainTab">
            <component type="form" name="productionRecordDetails"
                       reference="form">
                <script>
                    <![CDATA[
						this.changeRecordState = function(eventPerformer, ribbonItemName) {
>>>>>>> master:mes-plugins/mes-plugins-production-counting/src/main/resources/productionCounting/view/productionRecordDetails.xml
							var ribbonItem = #{window}.getRibbonItem("status." + ribbonItemName);
							var newState = ribbonItem.forState;
							if (window.confirm(ribbonItem.confirmMessage)) {
								#{form}.fireEvent(eventPerformer, 'changeTrackingState', [newState]);
							}
						}
					
						this.addOnChangeListener({
							onSetValue: function() {
								var itemNames = ["status.acceptTracking", "status.cancelTracking"];
								var isSaved = (#{form}.getValue().content && #{form}.getValue().content.entityId);
								var isDisabled = (#{isDisabled}.getValue().content.value == "1");
								var itemsToDisable = ["actions.save","actions.saveNew","actions.saveBack"];
								
								for (var elementKey in itemNames) {
									var ribbonItem = #{window}.getRibbonItem(itemNames[elementKey]);
									if (isSaved) {
										ribbonItem.enable();
									} else {
										ribbonItem.disable();
									}
								}
 								
   								for(var elementKey in itemsToDisable){  
   									var ribbonItem = #{window}.getRibbonItem(itemsToDisable[elementKey]);  
   									if(isDisabled){  
   										ribbonItem.disable();  
 									} else {  
										ribbonItem.enable();   
 									}   
     							}  
															
								if (isSaved && #{state}.getValue().content && #{state}.getValue().content.value) {
									#{state}.updateRibbon(#{state}.getValue().content.value);
								}
							}
						});
					]]>
<<<<<<< HEAD:mes-plugins/mes-plugins-production-counting/src/main/resources/productionCounting/view/productionTrackingDetails.xml
				</script>

				<component type="gridLayout" name="mainGridLayout"
					columns="3" rows="5">
					<layoutElement column="1" row="1">
						<component type="checkbox" name="lastTracking" field="lastTracking"
							reference="lastTracking" />
					</layoutElement>
					<layoutElement column="1" row="2">
						<component type="input" name="number" field="number"
							reference="number" defaultEnabled="false">
							<option type="alignment" value="right" />
						</component>
					</layoutElement>
					<layoutElement column="1" row="3">
						<component type="lookup" name="order" field="order"
							reference="order">
							<option type="column" name="name" fields="name" link="true" />
							<option type="column" name="state" fields="state" />
							<option type="column" name="typeOfProductionRecording"
								fields="typeOfProductionRecording" />

							<option type="required" value="true" />

							<option type="searchable" value="name,number" />
							<option type="orderable" value="name,number" />

							<option type="order" column="number" direction="desc" />

							<option type="expression"
								value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name" />
							<option type="fieldCode" value="number" />

							<listener event="onSelectedEntityChange"
								class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingDetailsListeners"
								method="clearFields" />
							<listener event="onSelectedEntityChange"
								class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingDetailsListeners"
								method="enableOrDisableFields" />
							<listener event="onSelectedEntityChange"
								class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingDetailsListeners"
								method="checkJustOne" />
						</component>
					</layoutElement>
					<layoutElement column="1" row="4">
						<component type="lookup" name="technologyOperationComponent"
							field="technologyOperationComponent" reference="technologyOperationComponent"
							defaultEnabled="false">
							<option type="column" name="name" fields="operation"
								expression="#operation['name']" link="true" />

							<option type="searchable" value="name,nodeNumber" />
							<option type="orderable" value="name,nodeNumber" />

							<option type="expression" value="#nodeNumber + '  ' + #operation['name']" />
							<option type="fieldCode" value="nodeNumber" />

							<criteriaModifier
								class="com.qcadoo.mes.productionCounting.criteriaModifiers.TechnologyOperationComponentCriteriaModifiersPC"
								method="restrictTechnologyOperationComponentsToOrderTechnology" />
						</component>
					</layoutElement>
					<layoutElement column="2" row="1">
						<component type="lookup" name="staff" reference="staff"
							field="staff">
							<option type="column" name="name" fields="name" />
							<option type="column" name="surname" fields="surname" />

							<option type="searchable" value="surname,name,number" />
							<option type="orderable" value="name,number" />

							<option type="expression"
								value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name + '&lt;/b&gt; - ' + #surname" />
							<option type="fieldCode" value="number" />

							<listener event="onSelectedEntityChange"
								class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingDetailsListeners"
								method="fillShiftAndDivisionField" />
						</component>
					</layoutElement>
					<layoutElement column="2" row="2">
						<component type="lookup" name="shift" reference="shift"
							field="shift">
							<option type="searchable" value="name" />
							<option type="orderable" value="name" />

							<option type="expression" value="#name" />
							<option type="fieldCode" value="name" />
						</component>
					</layoutElement>
					<layoutElement column="2" row="3">
						<component type="lookup" name="workstationType"
							reference="workstationType" field="workstationType">
							<option type="column" name="name" fields="name" link="true" />

							<option type="searchable" value="name,number" />
							<option type="orderable" value="name,number" />

							<option type="expression"
								value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name" />
							<option type="fieldCode" value="number" />

							<listener event="onSelectedEntityChange"
								class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingDetailsListeners"
								method="fillDivisionField" />
						</component>
					</layoutElement>
					<layoutElement column="2" row="4">
						<component type="lookup" name="division" reference="division"
							field="division">
							<option type="column" name="name" fields="name" />

							<option type="searchable" value="name,number" />
							<option type="orderable" value="name,number" />

							<option type="expression"
								value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name" />
							<option type="fieldCode" value="number" />
						</component>
					</layoutElement>
					<layoutElement column="2" row="5">
						<component type="checkbox" name="isDisabled" reference="isDisabled"
							defaultVisible="false" hasLabel="false" />
						<component type="select" name="state" field="state"
							reference="state" hasLabel="false" defaultVisible="false">
							<script>
								<![CDATA[
=======
                </script>
                <component type="gridLayout" name="mainGridLayout" columns="3" rows="6">
                    <layoutElement column="1" row="1">
                        <component type="checkbox" name="lastRecord" field="lastRecord"
                                   reference="lastRecord"/>
                    </layoutElement>
                    <layoutElement column="1" row="2">
                        <component type="input" name="number" field="number"
                                   reference="number" defaultEnabled="false">
                            <option type="alignment" value="right"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="1" row="3">
                        <component type="lookup" name="order" field="order"
                                   reference="order">
                            <option type="column" name="name" fields="name" link="true"/>
                            <option type="column" name="state" fields="state"/>
                            <option type="column" name="typeOfProductionRecording" fields="typeOfProductionRecording"/>

                            <option type="required" value="true"/>

                            <option type="searchable" value="name,number"/>
                            <option type="orderable" value="name,number"/>

                            <option type="order" column="number" direction="desc"/>

                            <option type="expression" value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name"/>
                            <option type="fieldCode" value="number"/>

                            <listener event="onSelectedEntityChange"
                                      class="com.qcadoo.mes.productionCounting.listeners.ProductionRecordDetailsListeners"
                                      method="clearFields"/>
                            <listener event="onSelectedEntityChange"
                                      class="com.qcadoo.mes.productionCounting.listeners.ProductionRecordDetailsListeners"
                                      method="enabledOrDisableFields"/>
                            <listener event="onSelectedEntityChange"
                                      class="com.qcadoo.mes.productionCounting.listeners.ProductionRecordDetailsListeners"
                                      method="checkJustOne"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="1" row="4">
                        <component type="lookup" name="technologyInstanceOperationComponent"
                                   field="technologyInstanceOperationComponent"
                                   source="#{order}.technologyInstanceOperationComponents"
                                   reference="technologyInstanceOperationComponent" defaultEnabled="false">
                            <option type="column" name="name" fields="operation"
                                    expression="#operation['name']" link="true"/>
                            <option type="searchable" value="name,nodeNumber"/>
                            <option type="orderable" value="name,nodeNumber"/>
                            <option type="expression" value="#nodeNumber + '  ' + #operation['name']"/>
                            <option type="fieldCode" value="nodeNumber"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="1">
                        <component type="select" name="state" field="state"
                                   reference="state" defaultEnabled="never">
                            <script>
                                <![CDATA[

>>>>>>> master:mes-plugins/mes-plugins-production-counting/src/main/resources/productionCounting/view/productionRecordDetails.xml
									this.addOnChangeListener({
										onSetValue: function(newValue) {
											if (!newValue || !newValue.content) {
												return;
											}
											var state = newValue.content.value;
											updateRibbon(state);
										}
									});
<<<<<<< HEAD:mes-plugins/mes-plugins-production-counting/src/main/resources/productionCounting/view/productionTrackingDetails.xml
									
									var onSetValueListener = {
										onSetValue: function(value) {
											toggleEditable(#{state}.getValue().content.value);
										}
									};
									
									function toggleEditable(state) {
										var enabled = state == "01draft";
									
										var toggleRibbonItems = ["actions.save", "actions.saveBack", "actions.saveNew", 
											"actions.cancel", "status.cancelTracking", "status.acceptTracking"];
										for (var elementKey in toggleRibbonItems) {
											var ribbonItemName = toggleRibbonItems[elementKey];
											var ribbonItem = #{window}.getRibbonItem(ribbonItemName);
											
=======

                                    function toggleEditable(enabled, message) {
                                        var toggleRibbonItems = [
                                                "actions.save",
                                                "actions.saveBack",
                                                "actions.saveNew",
                                                "actions.cancel",
                                                "actions.delete",
                                                "status.cancelRecord",
                                                "status.acceptRecord",
                                                "copy.copyPlannedQuantityToUsedQuantity"
                                            ],
                                            elementKey = {},
                                            ribbonItemName = "",
                                            ribbonItem = {};

										for (elementKey in toggleRibbonItems) {
											ribbonItemName = toggleRibbonItems[elementKey];
											ribbonItem = #{window}.getRibbonItem(ribbonItemName);

>>>>>>> master:mes-plugins/mes-plugins-production-counting/src/main/resources/productionCounting/view/productionRecordDetails.xml
											if (!ribbonItem) {
												continue;
											}

											if (enabled) {
												ribbonItem.enable();
											} else {
												ribbonItem.disable(message);
											}
										}
                                    }

                                    function enableDeleteButton() {
                                        #{window}.getRibbonItem("actions.delete").enable();
                                    }

									function updateRibbon(state) {
<<<<<<< HEAD:mes-plugins/mes-plugins-production-counting/src/main/resources/productionCounting/view/productionTrackingDetails.xml
										var acceptState = #{window}.getRibbonItem("status.acceptTracking");
										var cancelState = #{window}.getRibbonItem("status.cancelTracking");
										var actionDelete = #{window}.getRibbonItem("actions.delete");
											
										var itemsToDisable = ["actions.save","actions.saveNew","actions.saveBack"];
=======
										var acceptState = #{window}.getRibbonItem("status.acceptRecord");
										var cancelState = #{window}.getRibbonItem("status.cancelRecord");
>>>>>>> master:mes-plugins/mes-plugins-production-counting/src/main/resources/productionCounting/view/productionRecordDetails.xml
										acceptState.disable();
										acceptState.forState="02accepted";
										acceptState.confirmMessage = "#{translate(productionCounting.productionTrackingDetails.window.ribbon.status.acceptTracking.confirm)}";

										cancelState.disable();
										cancelState.forState="03declined";
<<<<<<< HEAD:mes-plugins/mes-plugins-production-counting/src/main/resources/productionCounting/view/productionTrackingDetails.xml
										cancelState.confirmMessage = "#{translate(productionCounting.productionTrackingDetails.window.ribbon.status.declineTracking.confirm)}";
										
										
										if (state == "01draft") {
											acceptState.enable();
											cancelState.enable();
=======
										cancelState.confirmMessage = "#{translate(productionCounting.productionRecordDetails.window.ribbon.status.declineRecord.confirm)}";

										if (#{isExternalSynchronized}.getValue().content.value == 0) {
										    var msg = "#{translate(productionCounting.productionRecord.info.isWaitingForSync)}";
										    toggleEditable(false, msg);
										} else if (state == "01draft") {
										    toggleEditable(true);
>>>>>>> master:mes-plugins/mes-plugins-production-counting/src/main/resources/productionCounting/view/productionRecordDetails.xml
										} else if (state == "02accepted") {
										    toggleEditable(false);
											cancelState.enable();
										} else if (state == "03declined") {
										    toggleEditable(false);
										    enableDeleteButton();
										} else{
										    QCD.error("Unknown state - '" + state + "'");
										    toggleEditable(true);
										}
									}
									
									this.updateRibbon = updateRibbon;

								]]>
<<<<<<< HEAD:mes-plugins/mes-plugins-production-counting/src/main/resources/productionCounting/view/productionTrackingDetails.xml
							</script>
						</component>
					</layoutElement>
				</component>
				<option type="header" value="true" />
				<option type="expression" value="#name" />

				<listener event="changeTrackingState"
					class="com.qcadoo.mes.productionCounting.states.client.ProductionTrackingStateChangeViewClient"
					method="changeState" />

				<listener event="copyPlannedQuantityToUsedQuantity"
					class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingDetailsListeners"
					method="copyPlannedQuantityToUsedQuantity" />
			</component>
		</windowTab>

		<windowTab name="productsTab">
			<component type="gridLayout" name="productsGridLayout"
				columns="2" rows="1">
				<layoutElement column="1" row="1">
					<component type="grid" name="trackingOperationProductInComponents"
						reference="trackingOperationProductInComponents" source="#{form}.trackingOperationProductInComponents"
						defaultEnabled="false">
						<option type="column" name="number" fields="product"
							expression="#product['number']" link="true" width="100" />
						<option type="column" name="name" fields="product"
							expression="#product['name']" link="true" width="200" />
						<option type="column" name="usedQuantity" fields="usedQuantity"
							width="100" />
						<option type="column" name="unit" fields="product"
							expression="#product['unit']" link="false" width="70" />

						<option type="correspondingView"
							value="productionCounting/trackingOperationProductInComponentDetails" />
						<option type="correspondingComponent" value="form" />
						<option type="correspondingViewInModal" value="true" />

						<option type="order" column="number" direction="desc" />

						<option type="searchable" value="number,name,usedQuantity,unit" />
						<option type="orderable" value="number,name,usedQuantity,unit" />

						<option type="creatable" value="false" />
						<option type="deletable" value="false" />
						<option type="fullscreen" value="true" />
						<option type="multiselect" value="false" />
					</component>
				</layoutElement>
				<layoutElement column="2" row="1">
					<component type="grid" name="trackingOperationProductOutComponents"
						reference="trackingOperationProductOutComponents" source="#{form}.trackingOperationProductOutComponents"
						defaultEnabled="false">
						<option type="column" name="number" fields="product"
							expression="#product['number']" link="true" width="100" />
						<option type="column" name="name" fields="product"
							expression="#product['name']" link="true" width="200" />
						<option type="column" name="usedQuantity" fields="usedQuantity"
							width="100" />
						<option type="column" name="unit" fields="product"
							expression="#product['unit']" link="false" width="70" />

						<option type="correspondingView"
							value="productionCounting/trackingOperationProductOutComponentDetails" />
						<option type="correspondingComponent" value="form" />
						<option type="correspondingViewInModal" value="true" />

						<option type="order" column="number" direction="desc" />

						<option type="searchable" value="number,name,usedQuantity,unit" />
						<option type="orderable" value="number,name,usedQuantity,unit" />

						<option type="creatable" value="false" />
						<option type="deletable" value="false" />
						<option type="fullscreen" value="true" />
						<option type="multiselect" value="false" />
					</component>
				</layoutElement>
			</component>
		</windowTab>

		<windowTab name="workTab">
			<component type="gridLayout" name="workGridLayout" columns="3"
				rows="1">
				<layoutElement column="1" row="1">
					<component type="borderLayout" name="borderLayoutTime"
						defaultVisible="false" reference="borderLayoutTime">
						<option type="label" value="time" />
						<component type="gridLayout" name="timeGridLayout"
							columns="1" rows="2">
							<layoutElement column="1" row="1">
								<component type="time" name="laborTime" reference="laborTime"
									field="#{form}.laborTime" hasDescription="true">
									<option type="noHours" value="5" />
								</component>
							</layoutElement>
							<layoutElement column="1" row="2">
								<component type="time" name="machineTime" reference="machineTime"
									field="#{form}.machineTime" hasDescription="true">
									<option type="noHours" value="5" />
								</component>
							</layoutElement>
						</component>
					</component>
				</layoutElement>
				<layoutElement column="2" row="1">
					<component type="borderLayout" name="borderLayoutPiecework"
						defaultVisible="false" reference="borderLayoutPiecework">
						<option type="label" value="piecework" />
						<component type="gridLayout" name="pieceworkGridLayout"
							columns="1" rows="1">
							<layoutElement column="1" row="1">
                                <component type="input" name="executedOperationCycles"
									reference="executedOperationCycles" field="#{form}.executedOperationCycles">
                                    <option type="alignment" value="right" />
                                </component>
							</layoutElement>
						</component>
					</component>
				</layoutElement>
			</component>
		</windowTab>

		<windowTab name="historyTab">
			<component type="gridLayout" name="loggingsGridLayout"
				columns="2" rows="1">
				<layoutElement column="1" row="1">
					<component type="grid" name="stateChanges" reference="stateChanges"
						source="#{form}.stateChanges">
						<option type="column" name="dateAndTime" fields="dateAndTime" />
						<option type="column" name="currentState" fields="targetState" />
						<option type="column" name="worker" fields="worker" />

						<option type="order" column="dateAndTime" direction="asc" />

						<option type="searchable" value="dateAndTime,targetState,worker" />
						<option type="orderable" value="dateAndTime,targetState,worker" />
					</component>
				</layoutElement>
			</component>
		</windowTab>

	</component>

	<hooks>
		<beforeRender
			class="com.qcadoo.mes.productionCounting.hooks.ProductionTrackingDetailsHooks"
			method="setCriteriaModifierParameters" />
		<beforeRender
			class="com.qcadoo.mes.productionCounting.hooks.ProductionTrackingDetailsHooks"
			method="initializeTrackingDetailsView" />
		<beforeRender
			class="com.qcadoo.mes.productionCounting.hooks.ProductionTrackingDetailsHooks"
			method="disableFieldsWhenStateNotDraft" />
		<beforeRender
			class="com.qcadoo.mes.productionCounting.hooks.ProductionTrackingDetailsHooks"
			method="updateRibbonState" />
        <beforeRender
			class="com.qcadoo.mes.productionCounting.hooks.ProductionTrackingDetailsHooks"
			method="filterStateChangeHistory" />
	</hooks>

=======
                            </script>
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="2">
                        <component type="lookup" name="staff" reference="staff"
                                   field="staff">
                            <option type="column" name="name" fields="name"/>
                            <option type="column" name="surname" fields="surname"/>

                            <option type="searchable" value="surname,name,number"/>
                            <option type="orderable" value="name,number"/>

                            <option type="expression"
                                    value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name + '&lt;/b&gt; - ' + #surname"/>
                            <option type="fieldCode" value="number"/>

                            <listener event="onSelectedEntityChange"
                                      class="com.qcadoo.mes.productionCounting.internal.ProductionRecordService"
                                      method="fillShiftAndDivisionField"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="3">
                        <component type="lookup" name="shift" reference="shift"
                                   field="shift">
                            <option type="searchable" value="name"/>
                            <option type="orderable" value="name"/>
                            <option type="expression" value="#name"/>
                            <option type="fieldCode" value="name"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="4">
                        <component type="lookup" name="workstationType" reference="workstationType"
                                   field="workstationType">
                            <option type="column" name="name" fields="name" link="true"/>

                            <option type="searchable" value="name,number"/>
                            <option type="orderable" value="name,number"/>

                            <option type="expression" value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name"/>
                            <option type="fieldCode" value="number"/>

                            <listener event="onSelectedEntityChange"
                                      class="com.qcadoo.mes.productionCounting.internal.ProductionRecordService"
                                      method="fillDivisionField"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="5">
                        <component type="lookup" name="division" reference="division"
                                   field="division">
                            <option type="column" name="name" fields="name"/>

                            <option type="searchable" value="name,number"/>
                            <option type="orderable" value="name,number"/>

                            <option type="expression" value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name"/>
                            <option type="fieldCode" value="number"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="6">
                        <component type="checkbox" name="isDisabled" reference="isDisabled" defaultVisible="false"
                                   hasLabel="false"/>
                        <component type="hidden" name="isExternalSynchronized" reference="isExternalSynchronized"
                                   defaultVisible="false" field="isExternalSynchronized"/>
                    </layoutElement>
                </component>
                <option type="header" value="true"/>
                <option type="expression" value="#name"/>

                <listener event="changeRecordState"
                          class="com.qcadoo.mes.productionCounting.states.client.ProductionRecordStateChangeViewClient"
                          method="changeState"/>

                <listener event="copyPlannedQuantityToUsedQuantity"
                          class="com.qcadoo.mes.productionCounting.listeners.ProductionRecordDetailsListeners"
                          method="copyPlannedQuantityToUsedQuantity"/>
            </component>
        </windowTab>
        <windowTab name="productsTab">
            <component type="gridLayout" name="productsGridLayout" columns="2" rows="1">
                <layoutElement column="1" row="1">
                    <component type="grid" name="recordOperationProductInComponent"
                               reference="recordOperationProductInComponent"
                               source="#{form}.recordOperationProductInComponents"
                               defaultEnabled="false">
                        <option type="column" name="number" fields="product"
                                expression="#product['number']" link="true" width="100"/>
                        <option type="column" name="name" fields="product"
                                expression="#product['name']" link="true" width="200"/>
                        <option type="column" name="usedQuantity" fields="usedQuantity"
                                width="100"/>
                        <option type="column" name="unit" fields="product"
                                expression="#product['unit']" link="false" width="70"/>

                        <option type="order" column="number" direction="desc"/>

                        <option type="correspondingView"
                                value="productionCounting/recordOperationProductInComponentDetails"/>
                        <option type="correspondingComponent" value="form"/>
                        <option type="correspondingViewInModal" value="true"/>

                        <option type="searchable" value="number,name,usedQuantity,unit"/>
                        <option type="orderable" value="number,name,usedQuantity,unit"/>

                        <option type="creatable" value="false"/>
                        <option type="deletable" value="false"/>
                        <option type="fullscreen" value="true"/>
                        <option type="multiselect" value="false"/>
                    </component>
                </layoutElement>
                <layoutElement column="2" row="1">
                    <component type="grid" name="recordOperationProductOutComponent"
                               reference="recordOperationProductOutComponent"
                               source="#{form}.recordOperationProductOutComponents"
                               defaultEnabled="false">
                        <option type="column" name="number" fields="product"
                                expression="#product['number']" link="true" width="100"/>
                        <option type="column" name="name" fields="product"
                                expression="#product['name']" link="true" width="200"/>
                        <option type="column" name="usedQuantity" fields="usedQuantity"
                                width="100"/>
                        <option type="column" name="unit" fields="product"
                                expression="#product['unit']" link="false" width="70"/>

                        <option type="order" column="number" direction="desc"/>

                        <option type="correspondingView"
                                value="productionCounting/recordOperationProductOutComponentDetails"/>
                        <option type="correspondingComponent" value="form"/>
                        <option type="correspondingViewInModal" value="true"/>

                        <option type="searchable" value="number,name,usedQuantity,unit"/>
                        <option type="orderable" value="number,name,usedQuantity,unit"/>

                        <option type="creatable" value="false"/>
                        <option type="deletable" value="false"/>
                        <option type="fullscreen" value="true"/>
                        <option type="multiselect" value="false"/>
                    </component>
                </layoutElement>
            </component>
        </windowTab>
        <windowTab name="workTab">
            <component type="gridLayout" name="workGridLayout" columns="3" rows="1">
                <layoutElement column="1" row="1">
                    <component type="borderLayout" name="borderLayoutTime" defaultVisible="false"
                               reference="borderLayoutTime">
                        <option type="label" value="time"/>
                        <component type="gridLayout" name="timeGridLayout" columns="1" rows="2">
                            <layoutElement column="1" row="1">
                                <component type="time" name="laborTime" reference="laborTime"
                                           field="#{form}.laborTime" hasDescription="true">
                                    <option type="noHours" value="5"/>
                                </component>
                            </layoutElement>
                            <layoutElement column="1" row="2">
                                <component type="time" name="machineTime" reference="machineTime"
                                           field="#{form}.machineTime" hasDescription="true">
                                    <option type="noHours" value="5"/>
                                </component>
                            </layoutElement>
                        </component>
                    </component>
                </layoutElement>
                <layoutElement column="2" row="1">
                    <component type="borderLayout" name="borderLayoutPiecework" defaultVisible="false"
                               reference="borderLayoutPiecework">
                        <option type="label" value="piecework"/>
                        <component type="gridLayout" name="pieceworkGridLayout" columns="1" rows="1">
                            <layoutElement column="1" row="1">
                                <component type="input" name="executedOperationCycles"
                                           reference="executedOperationCycles" field="#{form}.executedOperationCycles">
                                    <option type="alignment" value="right"/>
                                </component>
                            </layoutElement>
                        </component>
                    </component>
                </layoutElement>
            </component>
        </windowTab>
        <windowTab name="historyTab">
            <component type="gridLayout" name="loggingsGridLayout" columns="2" rows="1">
                <layoutElement column="1" row="1">
                    <component type="grid" name="loggingsGrid" reference="loggingsGrid" source="#{form}.stateChanges">
                        <option type="column" name="dateAndTime" fields="dateAndTime"/>
                        <option type="column" name="currentState" fields="targetState"/>
                        <option type="column" name="worker" fields="worker"/>

                        <option type="order" column="dateAndTime" direction="asc"/>

                        <option type="searchable" value="dateAndTime,targetState,worker"/>
                        <option type="orderable" value="dateAndTime,targetState,worker"/>

                        <criteriaModifier
                                class="com.qcadoo.mes.states.criteriaModifier.CommonCriteriaModifiers"
                                method="filterHistory"/>
                    </component>
                </layoutElement>
            </component>
        </windowTab>
    </component>
    <hooks>
        <beforeRender
                class="com.qcadoo.mes.productionCounting.listeners.ProductionRecordDetailsHooks"
                method="onBeforeRender"/>
    </hooks>
>>>>>>> master:mes-plugins/mes-plugins-production-counting/src/main/resources/productionCounting/view/productionRecordDetails.xml
</view>