<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 0.3.0

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->

<qcd:views plugin="plugins" xmlns:qcd="http://www.qcadoo.com/view">
	<view name="plugins" model="plugin" menuAccessible="true">
		<component type="window" name="window" reference="window">
			<ribbon>
				<group name="plugins">
					<bigButton name="download" icon="downloadIcon24.png" action="#{grid}.fireEvent(download);" message="plugins.ribbon.messages.download"/>
					<bigButton name="update" icon="updateIcon24.png" action="#{grid}.fireEvent(update);" state="disabled" />
				</group>
				<group name="actions">
					<smallButton name="enable" icon="enableIcon16.png" action="#{grid}.fireEvent(enable);" state="enabled" />
					<smallButton name="disable" icon="disableIcon16.png" action="#{grid}.fireEvent(disable);" state="disabled" />
					<smallButton name="remove" icon="deleteIcon16.png" action="#{grid}.fireEvent(removePlugin);" state="disabled" />
				</group>
			</ribbon>
			<component type="grid" name="plugins" reference="grid">
				<option type="column" name="name" fields="name" link="true" width="200"/>
				<option type="column" name="version" fields="version" />
				<option type="column" name="vendor" fields="vendor" />
				<option type="column" name="base" fields="base" link="false" width="50"/>
				<option type="column" name="status" fields="status" width="50"/>
				<option type="order" column="name" direction="asc"/>
				<option type="correspondingView" value="plugins/plugin" />
				<option type="correspondingComponent" value="form" />
				<option type="searchable" value="name,description,version,vendor,status,base" />
				<option type="orderable" value="name,description,version,vendor,status,base" />
				<option type="deletable" value="false" />
				<option type="creatable" value="false" />
				<option type="fullscreen" value="true" />
				<listener event="download" bean="com.qcadoo.mes.plugins.controller.PluginManagementController" method="onPluginDownloadClick" />
				<listener event="update" bean="com.qcadoo.mes.plugins.controller.PluginManagementController" method="onPluginUpdateClick" />
				<listener event="enable" bean="com.qcadoo.mes.plugins.controller.PluginManagementController" method="onPluginEnableClick" />
				<listener event="disable" bean="com.qcadoo.mes.plugins.controller.PluginManagementController" method="onPluginDisableClick" />
				<listener event="removePlugin" bean="com.qcadoo.mes.plugins.controller.PluginManagementController" method="onPluginRemoveClick" />
				<script>
					<![CDATA[
						var downloadRibbonItem = #{window}.getRibbonItem("plugins.download");
						var updateRibbonItem = #{window}.getRibbonItem("plugins.update");
						
						var enableRibbonItem = #{window}.getRibbonItem("actions.enable");
						var disableRibbonItem = #{window}.getRibbonItem("actions.disable");
						var removeRibbonItem = #{window}.getRibbonItem("actions.remove");
						
						var listener = {
							onChange: function(selectedEntitiesArray) {
								if (!selectedEntitiesArray || selectedEntitiesArray.length != 1) {
									updateRibbonItem.disable();
									enableRibbonItem.disable();
									disableRibbonItem.disable();
									removeRibbonItem.disable();
								} else {
									var status = selectedEntitiesArray[0].fields.status;
									var isBase = (selectedEntitiesArray[0].fields.base == "1");
									if (isBase) {
										updateRibbonItem.disable("#{translate(plugins.ribbon.messages.base)}");
										enableRibbonItem.disable("#{translate(plugins.ribbon.messages.alreadyEnabled)}");
										disableRibbonItem.disable("#{translate(plugins.ribbon.messages.base)}");
										removeRibbonItem.disable("#{translate(plugins.ribbon.messages.base)}");
									} else {
										if (status == "01downloaded") {
											updateRibbonItem.disable("#{translate(plugins.ribbon.messages.notInstalled)}");
											enableRibbonItem.enable("#{translate(plugins.ribbon.messages.enable)}");
											disableRibbonItem.disable("#{translate(plugins.ribbon.messages.alreadyDisabled)}");
											removeRibbonItem.enable();
											removeRibbonItem.setLabel("#{translate(plugins.plugins.window.ribbon.actions.remove)}");
											removeRibbonItem.setIcon('deleteIcon16.png');
										} else if (status == "02installed") {
											updateRibbonItem.enable("#{translate(plugins.ribbon.messages.update)}");
											enableRibbonItem.enable("#{translate(plugins.ribbon.messages.enable)}");
											disableRibbonItem.disable("#{translate(plugins.ribbon.messages.alreadyDisabled)}");
											removeRibbonItem.enable();
											removeRibbonItem.setLabel("#{translate(plugins.plugins.window.ribbon.actions.deinstall)}");
											removeRibbonItem.setIcon('deinstallIcon16.png');
										} else if (status == "03active") {
											updateRibbonItem.enable("#{translate(plugins.ribbon.messages.update)}");
											enableRibbonItem.disable("#{translate(plugins.ribbon.messages.alreadyEnabled)}");
											disableRibbonItem.enable();
											removeRibbonItem.enable("#{translate(plugins.plugins.window.ribbon.actions.removeInfo)}");
											removeRibbonItem.setLabel("#{translate(plugins.plugins.window.ribbon.actions.deinstall)}");
											removeRibbonItem.setIcon('deinstallIcon16.png');
										}
									}
								}
							}
						}
						this.addOnChangeListener(listener);
					]]>
				</script>
			</component>
			<option type="fixedHeight" value="true" />
			<option type="header" value="false" />
		</component>
	</view>
	<view name="plugin" model="plugin">
		<component type="window" name="window">
			<ribbon>
				<group template="navigation"/>
				<group name="plugins">
					<bigButton name="update" icon="updateIcon24.png" action="#{form}.fireEvent(update);" state="disabled">
						<script>
							<![CDATA[
								var listener = {
									onSetValue: function(value) {
										var isBase = (#{base}.getValue().content.value == "1");
										var status = #{status}.getValue().content.value;
										if (isBase) {
											this.disable("#{translate(plugins.ribbon.messages.base)}");
										} else {
											if (status == "01downloaded") {
												this.disable("#{translate(plugins.ribbon.messages.notInstalled)}");
											} else {
												this.enable();
											}
										}
									}
								}
								#{form}.addOnChangeListener(listener);
							]]>
						</script>
					</bigButton>
				</group>
			</ribbon>
			<component type="form" name="plugin" reference="form">
				<component type="gridLayout" name="gridLayout" columns="3" rows="8">
					<layoutElement column="1" row="1" height="2">
						<component type="textarea" name="name" field="name" defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="1" row="3">
						<component type="input" name="version" field="version" defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="1" row="4">
						<component type="input" name="vendor" field="vendor" defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="1" row="5" height="2">
						<component type="textarea" name="description" field="description" defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="1" row="7">
						<component type="select" name="status" field="status" defaultEnabled="false" reference="status" />
					</layoutElement>
					<layoutElement column="1" row="8">
						<component type="checkbox" name="base" field="base" defaultEnabled="false" reference="base" />
					</layoutElement>
				</component>
				<option type="expression" value="#name" />
				<listener event="update" bean="com.qcadoo.mes.plugins.controller.PluginManagementController" method="onPluginUpdateClick" />
			</component>
		</component>
	</view>
	
	<view name="pluginDownload">
		<component type="window" name="window">
			<ribbon>
				<group template="navigation"/>
			</ribbon>
			<component type="staticPage" name="pluginDownload">
				<option type="page" value="plugins/pluginDownload.jsp" />
			</component>
			<option type="header" value="true" />
		</component>
	</view>
	
	<!-- ERROR PAGES -->
	
	<view name="pluginInfo">
		<component type="window" name="window">
			<ribbon>
				<group template="navigation"/>
			</ribbon>
			<component type="staticPage" name="pluginInfo">
				<option type="page" value="plugins/pluginInfo.jsp" />
			</component>
			<option type="header" value="false" />
		</component>
	</view>
	
</qcd:views>