<?xml version="1.0" encoding="UTF-8"?>

<views plugin="plugins" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://schema.qcadoo.org/view" xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd">
	<view name="plugins" plugin="qcadooPlugin" model="plugin"
		menuAccessible="true" defaultAuthorizationRole="ROLE_ADMIN">
		<component type="window" name="window" reference="window">
			<ribbon>
				<group name="plugins">
					<bigButton name="downloadPlugin" icon="downloadIcon24.png"
						action="#{grid}.fireEvent(downloadPlugin);" message="plugins.ribbon.messages.download" />
				</group>
				<group name="actions">
					<bigButton name="changeStatus" icon="enableIcon24.png"
						state="disabled">
						<script>
							<![CDATA[
								this.element.width(100);
								this.removeOnChangeListeners();
								this.addOnChangeListener({
									onClick: function() {
										if (this.state == "enable") {
											if (window.confirm("#{translate(plugins.ribbon.confirms.enable)}")) {
												#{grid}.performEvent('enablePlugin', []);
											};
										} else if (this.state == "disable") {
											if (window.confirm("#{translate(plugins.ribbon.confirms.disable)}")) {
												#{grid}.performEvent('disablePlugin', []);
											};
										}
									}
								});
							]]>
						</script>
					</bigButton>
					<smallButton name="remove" icon="deleteIcon16.png"
						state="disabled">
						<script>
							<![CDATA[
								this.removeOnChangeListeners();
								this.addOnChangeListener({
									onClick: function() {
										if (window.confirm("#{translate(plugins.ribbon.confirms.remove)}")) {
											#{grid}.performEvent('removePlugin', []);
										}
									}
								});
							]]>
						</script>
					</smallButton>
				</group>
			</ribbon>
			<component type="grid" name="plugins" reference="grid">
				<option type="column" name="name" fields="name" link="true"
					width="100" />
				<option type="column" name="identifier" fields="identifier"
					link="true" width="80" />
				<option type="column" name="vendor" fields="vendor" width="100" />
				<option type="column" name="version" fields="version" width="40" />
				<option type="column" name="state" fields="state" width="60" />
				<option type="column" name="isSystem" fields="isSystem" width="60" />
				<option type="order" column="identifier" direction="asc" />
				<option type="correspondingView" value="plugins/plugin" />
				<option type="correspondingComponent" value="form" />
				<option type="correspondingViewInModal" value="true" />
				<option type="searchable" value="identifier,version,state,isSystem" />
				<option type="orderable" value="identifier,version,state,isSystem" />
				<option type="paginable" value="false" />
				<option type="deletable" value="false" />
				<option type="creatable" value="false" />
				<option type="fullscreen" value="true" />
				<option type="multiselect" value="true" />
				<listener event="downloadPlugin"
					bean="com.qcadoo.mes.plugins.controller.PluginManagmentViewHook"
					method="onDownloadButtonClick" />
				<listener event="enablePlugin"
					bean="com.qcadoo.mes.plugins.controller.PluginManagmentViewHook"
					method="onEnableButtonClick" />
				<listener event="disablePlugin"
					bean="com.qcadoo.mes.plugins.controller.PluginManagmentViewHook"
					method="onDisableButtonClick" />
				<listener event="removePlugin"
					bean="com.qcadoo.mes.plugins.controller.PluginManagmentViewHook"
					method="onRemoveButtonClick" />
				<script>
					<![CDATA[
						var downloadRibbonItem = #{window}.getRibbonItem("plugins.download");
						var changeStatusRibbonItem = #{window}.getRibbonItem("actions.changeStatus");
						var removeRibbonItem = #{window}.getRibbonItem("actions.remove");
						this.removeOnChangeListeners();
						this.addOnChangeListener({
							onChange: function(selectedEntitiesArray) {
								if (selectedEntitiesArray.length == 0) {
									changeStatusRibbonItem.disable();
									removeRibbonItem.disable();
								} else {
									var anySystem = false;
									var allEnabled = true;
									var noneEnabled = true;
									for (var i in selectedEntitiesArray) {
										if (selectedEntitiesArray[i].fields.isSystem == "1") {
											anySystem = true;
											break;
										}
										var state = selectedEntitiesArray[i].fields.state;
										if (state == 'ENABLED') {
											noneEnabled = false;
										} else {
											allEnabled = false;
										}
										
									}
									if (anySystem) {
										changeStatusRibbonItem.disable("#{translate(plugins.ribbon.messages.base)}");
										removeRibbonItem.disable("#{translate(plugins.ribbon.messages.base)}");
									} else {
										removeRibbonItem.enable("#{translate(plugins.ribbon.messages.remove)}");
										if (allEnabled) {
											changeStatusRibbonItem.enable();
											changeStatusRibbonItem.state = "disable";
											changeStatusRibbonItem.setLabel("#{translate(plugins.plugins.window.ribbon.actions.disable)}");
											changeStatusRibbonItem.setIcon('disableIcon24.png');
										} else if (noneEnabled) {
											changeStatusRibbonItem.enable();
											changeStatusRibbonItem.state = "enable";
											changeStatusRibbonItem.setLabel("#{translate(plugins.plugins.window.ribbon.actions.changeStatus)}");
											changeStatusRibbonItem.setIcon('enableIcon24.png');
										} else {
											changeStatusRibbonItem.disable("#{translate(plugins.ribbon.messages.mixedStatus)}");
										}
									}
								}
							}
						});
					]]>
				</script>
			</component>
			<option type="fixedHeight" value="true" />
			<option type="header" value="false" />
			<script>
				<![CDATA[
					this.addOnChangeListener({
						onSetValue: function(selectedEntitiesArray) {
							this.updateMenu();
						}
					});
				]]>
			</script>
		</component>
	</view>
	<view name="plugin" plugin="qcadooPlugin" model="plugin"
		windowHeight="450" defaultAuthorizationRole="ROLE_ADMIN">
		<component type="window" name="window">
			<ribbon>
				<group template="navigation" />
			</ribbon>
			<component type="form" name="plugin" reference="form">
				<component type="gridLayout" name="gridLayout" columns="2"
					rows="7">
					<layoutElement column="1" row="1" height="1">
						<component type="input" name="identifier" field="identifier"
							defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="1" row="2">
						<component type="input" name="version" field="version"
							defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="2" row="1">
						<component type="select" name="state" field="state"
							defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="2" row="2">
					</layoutElement>
					<layoutElement column="1" row="3" width="2">
						<component type="input" name="name" field="name"
							defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="1" row="4" width="2" height="2">
						<component type="textarea" name="description" field="description"
							defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="1" row="6" width="2">
						<component type="input" name="vendor" field="vendor"
							defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="1" row="7" width="2">
						<component type="input" name="vendorUrl" field="vendorUrl"
							defaultEnabled="false" />
					</layoutElement>
				</component>
				<option type="header" value="true" />
				<option type="expression" value="#identifier" />
			</component>
		</component>
	</view>

	<view name="pluginDownload" windowWidth="520" windowHeight="260" defaultAuthorizationRole="ROLE_ADMIN">
		<component type="window" name="window">
			<ribbon>
				<group template="navigation" />
			</ribbon>
			<component type="gridLayout" name="gridLayout" columns="1"
				rows="1" fixedRowHeight="false">
				<layoutElement column="1" row="1">
					<component type="staticPage" name="pluginDownload">
						<option type="page" value="plugins/pluginDownload.jsp" />
					</component>
				</layoutElement>
			</component>
			<option type="header" value="true" />
		</component>
	</view>

	<view name="pluginInfo" defaultAuthorizationRole="ROLE_ADMIN">
		<component type="window" name="window">
			<ribbon>
				<group template="navigation" />
			</ribbon>
			<component type="gridLayout" name="gridLayout" columns="1"
				rows="1" fixedRowHeight="false">
				<layoutElement column="1" row="1">
					<component type="staticPage" name="pluginInfo">
						<option type="page" value="plugins/pluginInfo.jsp" />
					</component>
				</layoutElement>
			</component>
			<option type="header" value="true" />
		</component>
	</view>

	<view name="restartView" windowWidth="500" windowHeight="140" defaultAuthorizationRole="ROLE_ADMIN">
		<component type="window" name="window" ribbon="false">
			<component type="gridLayout" name="gridLayout" columns="1"
				rows="1" fixedRowHeight="false">
				<layoutElement column="1" row="1">
					<component type="staticPage" name="restart">
						<option type="page" value="plugins/restartView.jsp" />
					</component>
				</layoutElement>
			</component>
			<option type="header" value="true" />
		</component>
	</view>
</views>