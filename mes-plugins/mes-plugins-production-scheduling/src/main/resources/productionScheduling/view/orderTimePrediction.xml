<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.1.3

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
	xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
	name="orderTimePrediction" menuAccessible="true" modelPlugin="orders"
	modelName="order">

	<component type="window" name="window" reference="window">
		<ribbon>
			<group name="timeOfTechnology">
				<smallButton name="new" icon="cancelIcon16.png"
					action="#{window}.fireEvent(clearAllField);" />
				<bigButton name="countTimeOfTechnology" icon="calculateTimeIcon24.png"
					action="#{window}.fireEvent(countTimeOfTechnology);" state="disabled" />
			</group>
		</ribbon>
		<component type="form" name="form" reference="form">
			<script>
				<![CDATA[
					function setCountTimeOfTechnologyButtonState() {
						var countTimeOfTechnology = #{window}.getRibbonItem("timeOfTechnology.countTimeOfTechnology");
						var technologyValue = #{technology}.getComponentData();
						var dateFromValue = #{dateFrom}.getComponentData();
						var quantityValue = #{quantity}.getComponentData();

						if (dateFromValue.value && dateFromValue.value != "" 
								&& quantityValue.value && quantityValue.value != "" 
								&& technologyValue.value && technologyValue.value != "") {
							countTimeOfTechnology.enable();
						} else {
							countTimeOfTechnology.disable();
						}
					}

					var statelessFields = new Array(
						#{realizationTime},
						#{technology},
						#{quantity},
						#{dateFrom},
						#{dateTo}
					);					

					for(var i = 0; i < statelessFields.length; i++) {
						statelessFields[i].performUpdateState();
						statelessFields[i].addOnChangeListener({
							onChange: function() {
								setCountTimeOfTechnologyButtonState();
							}
						});
					}
				]]>
			</script>
			<component type="gridLayout" name="gridsLayout" columns="3"
				rows="9">
				<layoutElement column="1" row="1">
					<component type="lookup" name="technology" reference="technology"
						model="technology" plugin="technologies">
						<option type="required" value="true" />
						<option type="column" name="name" fields="name" link="true"
							width="200" />
						<option type="searchable" value="name" />
						<option type="orderable" value="name" />
						<option type="expression"
							value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name" />
						<option type="fieldCode" value="number" />
					</component>
				</layoutElement>
				<layoutElement column="1" row="2">
					<component type="input" name="quantity" reference="quantity"
						defaultEnabled="true">
						<option type="alignment" value="right" />
					</component>
				</layoutElement>
				<layoutElement column="1" row="3">
					<component type="calendar" name="dateFrom" reference="dateFrom"
						defaultEnabled="true">
						<option type="withTimePicker" value="true" />
						<option type="required" value="true" />
					</component>
				</layoutElement>
				<layoutElement column="1" row="4">
					<component type="time" name="realizationTime" reference="realizationTime"
						defaultEnabled="false" >
					</component>
				</layoutElement>
				<layoutElement column="1" row="5">
					<component type="calendar" name="dateTo" reference="dateTo"
						defaultEnabled="false">
						<option type="withTimePicker" value="true" />
					</component>
				</layoutElement>
			</component>

			<option type="header" value="true" />
		</component>
	</component>
	<hooks>
		<beforeRender
			class="com.qcadoo.mes.productionScheduling.OrderTimePredictionService"
			method="setFieldDisable" />
	</hooks>

</view>