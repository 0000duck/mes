<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.2.0

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<plugin plugin="orders" group="planning" version="${qcadoo.plugin.version}"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/plugin"
	xmlns:model="http://schema.qcadoo.org/modules/model" xmlns:view="http://schema.qcadoo.org/modules/view"
	xmlns:menu="http://schema.qcadoo.org/modules/menu" xmlns:localization="http://schema.qcadoo.org/modules/localization"
	xmlns:report="http://schema.qcadoo.org/modules/report" xmlns:custom="http://schema.qcadoo.org/modules/custom"
	xsi:schemaLocation="
		http://schema.qcadoo.org/plugin 
		http://schema.qcadoo.org/plugin.xsd 
		http://schema.qcadoo.org/modules/model 
		http://schema.qcadoo.org/modules/model.xsd 
		http://schema.qcadoo.org/modules/view 
		http://schema.qcadoo.org/modules/view.xsd 
		http://schema.qcadoo.org/modules/localization 
		http://schema.qcadoo.org/modules/localization.xsd 
		http://schema.qcadoo.org/modules/report 
		http://schema.qcadoo.org/modules/report.xsd 
		http://schema.qcadoo.org/modules/menu 
		http://schema.qcadoo.org/modules/menu.xsd
		http://schema.qcadoo.org/modules/custom 
		http://schema.qcadoo.org/modules/custom.xsd">

	<information>
		<name>MES - Orders</name>
		<vendor>
			<name>Qcadoo Limited</name>
			<url>http://www.qcadoo.com/</url>
		</vendor>
		<description>Production orders and the general production plan.</description>
		<license>AGPL</license>	
	</information>

	<dependencies>
		<dependency>
			<plugin>productionLines</plugin>
			<version>[1.1.6</version>
		</dependency>
	</dependencies>

	<modules>
		<localization:translation path="locales" />

		<model:model model="order" resource="model/order.xml" />
		<model:model model="orderStateChange" resource="model/orderStateChange.xml" />

		<model:model model="typeOfCorrectionCauses" resource="model/typeOfCorrectionCauses.xml" />

		<model:model model="reasonTypeCorrectionDateFrom" resource="model/reasonTypeCorrectionDateFrom.xml" />
		<model:model model="reasonTypeCorrectionDateTo" resource="model/reasonTypeCorrectionDateTo.xml" />
		<model:model model="reasonTypeDeviationEffectiveStart" resource="model/reasonTypeDeviationEffectiveStart.xml" />
		<model:model model="reasonTypeDeviationEffectiveEnd" resource="model/reasonTypeDeviationEffectiveEnd.xml" />
		<model:model model="reasonTypeOfChangingOrderState" resource="model/reasonTypeOfChangingOrderState.xml" />

		<model:model-field plugin="states" model="message">
		    <model:belongsTo name="orderStateChange" plugin="orders" model="orderStateChange" />
		</model:model-field>
		
		<model:model-field plugin="basic" model="product">
			<model:hasMany name="orders" plugin="orders" model="order"
				joinField="product" cascade="nullify" />
		</model:model-field>

		<model:model-field plugin="technologies" model="technology">
			<model:hasMany name="orders" plugin="orders" model="order"
				joinField="technology" cascade="nullify" />
		</model:model-field>
		<model:model-field plugin="technologies" model="technologyInstanceOperationComponent">
		    <model:belongsTo name="order" plugin="orders" model="order" required="true"/>
		</model:model-field>
	
		<model:model-field plugin="basic" model="parameter">
		    <model:boolean name="reasonNeededWhenCorrectingDateFrom" default="false" />
		</model:model-field>
		<model:model-field plugin="basic" model="parameter">
		    <model:boolean name="reasonNeededWhenCorrectingDateTo" default="false" />
		</model:model-field>
		
		<model:model-field plugin="basic" model="parameter">
		    <model:boolean name="reasonNeededWhenChangingStateToDeclined" default="false" />
		</model:model-field>
		<model:model-field plugin="basic" model="parameter">
		    <model:boolean name="reasonNeededWhenChangingStateToInterrupted" default="false" />
		</model:model-field>
		<model:model-field plugin="basic" model="parameter">
		    <model:boolean name="reasonNeededWhenChangingStateToAbandoned" default="false" />
		</model:model-field>
		
		<model:model-field plugin="basic" model="parameter">
		    <model:boolean name="reasonNeededWhenDelayedEffectiveDateFrom" default="false" />
		</model:model-field>
		<model:model-field plugin="basic" model="parameter">
		    <model:boolean name="reasonNeededWhenEarlierEffectiveDateFrom" default="false" />
		</model:model-field>
		<model:model-field plugin="basic" model="parameter">
		    <model:boolean name="reasonNeededWhenDelayedEffectiveDateTo" default="false" />
		</model:model-field>
		<model:model-field plugin="basic" model="parameter">
		    <model:boolean name="reasonNeededWhenEarlierEffectiveDateTo" default="false" />
		</model:model-field>
		
		<model:model-field plugin="basic" model="parameter">
		    <model:integer name="delayedEffectiveDateFromTime" default="900"/>
		</model:model-field>
		<model:model-field plugin="basic" model="parameter">
		    <model:integer name="earlierEffectiveDateFromTime" default="900"/>
		</model:model-field>
		<model:model-field plugin="basic" model="parameter">
		    <model:integer name="delayedEffectiveDateToTime" default="900"/>
		</model:model-field>
		<model:model-field plugin="basic" model="parameter">
		    <model:integer name="earlierEffectiveDateToTime" default="900"/>
		</model:model-field>
		<model:model-field plugin="basic" model="parameter">
		    <model:boolean name="blockAbilityToChangeApprovalOrder" default="false" />
		</model:model-field>
		<model:model-field plugin="basic" model="parameter">
		    <model:boolean name="reasonNeededWhenCorrectingTheRequestedVolume" default="false" />
		</model:model-field>
		
		<model:model-hook plugin="technologies" model="technology">
			<model:validatesWith
				class="com.qcadoo.mes.orders.OrdersTechnologyExtensionService"
				method="checkExistingOrders" />
		</model:model-hook>

		<menu:menu-category name="orders" />
		<menu:menu-category name="ordersTracking" />

		<menu:menu-item name="productionOrders" category="orders"
			view="ordersList" />
		<menu:menu-item name="productionOrdersPlanning" category="orders"
			view="ordersPlanningList" />

		<view:view resource="view/ordersList.xml" />
		<view:view resource="view/ordersPlanningList.xml" />
		<view:view resource="view/orderDetails.xml" />

		<view:view resource="view/ordersParameters.xml" />

		<view:view resource="view/orderStateChangeDetails.xml" />
		
		<view:view resource="view/orderStateChangeReasonDialog.xml" />

		<view:view resource="view/technologyInstanceOperationComponentList.xml" />
		
		<view:view-ribbon-group resource="view/ribbonExtensions/productDetails.xml" />
		<view:view-ribbon-group resource="view/ribbonExtensions/parameters.xml" />
		
		<view:view-listener plugin="basic" view="parameters"
			component="form" event="redirectToOrdersParameters"
			class="com.qcadoo.mes.orders.listeners.ParametersListenersO"
			method="redirectToOrdersParameters" />
		
		<view:view-hook view="technologyInstanceOperationComponentDetails" type="beforeRender" plugin="technologies" 
		    	class="com.qcadoo.mes.orders.hooks.TechnologyInstOperCompDetailsHooks" method="disabledFormWhenOrderStateIsAccepted"/>
		
		<view:view-listener plugin="basic" view="productDetails"
			component="form" event="showOrdersWithProductMain"
			class="com.qcadoo.mes.orders.listeners.ProductDetailsListenersO"
			method="showOrdersWithProductMain" />
			
		<view:view-listener plugin="basic" view="productDetails"
			component="form" event="showOrdersWithProductPlanned"
			class="com.qcadoo.mes.orders.listeners.ProductDetailsListenersO"
			method="showOrdersWithProductPlanned" />
		
		<view:view-hook plugin="basic" view="productDetails"
			type="beforeRender" 
			class="com.qcadoo.mes.orders.hooks.ProductDetailsViewHooksO"
			method="updateRibbonState" />
			
		<report:report-template name="order"
			resource="report/order.jrxml" />
			
		<view:resource uri="public/**/*" />
		
		<custom:custom class="com.qcadoo.mes.orders.states.module.OrderStateServiceRegisterModule" />
	</modules>
	
	<features>
		<end-user />
	</features>

</plugin>